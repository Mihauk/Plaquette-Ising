(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    317312,       6614]
NotebookOptionsPosition[    313494,       6545]
NotebookOutlinePosition[    313836,       6560]
CellTagsIndexPosition[    313793,       6557]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"z", " ", "=", " ", 
   RowBox[{"PauliMatrix", "[", "3", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", " ", "=", " ", 
   RowBox[{"PauliMatrix", "[", "1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I1", " ", "=", " ", 
   RowBox[{"IdentityMatrix", "[", "2", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I2", " ", "=", " ", 
   RowBox[{"IdentityMatrix", "[", 
    SuperscriptBox["2", "2"], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I3", " ", "=", " ", 
   RowBox[{"IdentityMatrix", "[", 
    SuperscriptBox["2", "3"], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.784397484266961*^9, 3.784397494031352*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"1d498b53-d483-4cb2-a780-6b81a585f45a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"H3", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], "m", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"z", ",", "I1"}], "]"}], " ", "+", " ", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"I1", ",", "z"}], "]"}]}], ")"}]}], " ", "-", 
    RowBox[{"\[CapitalDelta]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"x", ",", "I1"}], "]"}], "+", " ", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"I1", ",", "x"}], "]"}], " ", "+", " ", 
       RowBox[{"\[Tau]", " ", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{"x", ",", "x"}], "]"}]}]}], ")"}]}]}], "//", 
   "MatrixForm"}]}]], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"09d3b63b-796c-42a0-92c7-1eb6dc559a22"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "4"}], " ", "m"}], 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{
       RowBox[{"-", "\[CapitalDelta]"}], " ", "\[Tau]"}]},
     {
      RowBox[{"-", "\[CapitalDelta]"}], "0", 
      RowBox[{
       RowBox[{"-", "\[CapitalDelta]"}], " ", "\[Tau]"}], 
      RowBox[{"-", "\[CapitalDelta]"}]},
     {
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{
       RowBox[{"-", "\[CapitalDelta]"}], " ", "\[Tau]"}], "0", 
      RowBox[{"-", "\[CapitalDelta]"}]},
     {
      RowBox[{
       RowBox[{"-", "\[CapitalDelta]"}], " ", "\[Tau]"}], 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"4", " ", "m"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.784397451072433*^9, 3.784397748232456*^9, 
  3.784397817444578*^9},
 CellLabel->
  "Out[6]//MatrixForm=",ExpressionUUID->"458596ee-21e3-48f9-8359-\
05b39dca2790"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ham", " ", "=", " ", 
  RowBox[{"H3", "/.", " ", 
   RowBox[{"{", 
    RowBox[{"\[Tau]", "\[Rule]", "1"}], "}"}]}]}]], "Input",
 CellLabel->"In[7]:=",ExpressionUUID->"410983f1-df45-495b-a945-1394ccff97ed"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "4"}], " ", "m"}], 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"-", "\[CapitalDelta]"}]},
     {
      RowBox[{"-", "\[CapitalDelta]"}], "0", 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"-", "\[CapitalDelta]"}]},
     {
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"-", "\[CapitalDelta]"}], "0", 
      RowBox[{"-", "\[CapitalDelta]"}]},
     {
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"4", " ", "m"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7843974620891733`*^9, 3.7843978203449707`*^9},
 CellLabel->
  "Out[7]//MatrixForm=",ExpressionUUID->"ebcbe4ae-f339-4067-b2a3-\
87d4f2ea8299"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "2", ",", ".1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.784397507458095*^9, 3.7843975320819807`*^9}, {
  3.784397709707498*^9, 3.784397714092098*^9}, {3.78439842177349*^9, 
  3.78439843933326*^9}, {3.784398472941568*^9, 3.784398487971006*^9}, {
  3.78440060984805*^9, 3.784400610474229*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"4b86f1cf-9473-409c-ac78-ef111b14da2e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Eigenvalues", "[", 
       RowBox[{"Ham", ",", "1"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{"\[CapitalDelta]", "\[Rule]", "d2"}], "}"}]}], "}"}], "+", 
    RowBox[{"2", 
     SuperscriptBox["m", "2"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"d2", ",", "\[Delta]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.784399209277096*^9, 3.784399247321748*^9}, {
  3.784399289304315*^9, 3.7843992940265293`*^9}, {3.784399489553484*^9, 
  3.784399506153194*^9}, {3.784399598358264*^9, 3.7843996131623793`*^9}, {
  3.784399677869268*^9, 3.784399685200013*^9}, {3.784399726331849*^9, 
  3.784399750586524*^9}, {3.784399788073608*^9, 3.78439989732895*^9}, {
  3.784400544077948*^9, 3.784400562189726*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"b13aa593-6552-4403-b8d6-118d96e6754b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"-", "4"}], " ", "m"}], "0.`", "0.`", "0.`"},
           {"0.`", "0", "0.`", "0.`"},
           {"0.`", "0.`", "0", "0.`"},
           {"0.`", "0.`", "0.`", 
            RowBox[{"4", " ", "m"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"-", "4"}], " ", "m"}], 
            RowBox[{"-", "0.1`"}], 
            RowBox[{"-", "0.1`"}], 
            RowBox[{"-", "0.1`"}]},
           {
            RowBox[{"-", "0.1`"}], "0", 
            RowBox[{"-", "0.1`"}], 
            RowBox[{"-", "0.1`"}]},
           {
            RowBox[{"-", "0.1`"}], 
            RowBox[{"-", "0.1`"}], "0", 
            RowBox[{"-", "0.1`"}]},
           {
            RowBox[{"-", "0.1`"}], 
            RowBox[{"-", "0.1`"}], 
            RowBox[{"-", "0.1`"}], 
            RowBox[{"4", " ", "m"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"-", "4"}], " ", "m"}], 
            RowBox[{"-", "0.2`"}], 
            RowBox[{"-", "0.2`"}], 
            RowBox[{"-", "0.2`"}]},
           {
            RowBox[{"-", "0.2`"}], "0", 
            RowBox[{"-", "0.2`"}], 
            RowBox[{"-", "0.2`"}]},
           {
            RowBox[{"-", "0.2`"}], 
            RowBox[{"-", "0.2`"}], "0", 
            RowBox[{"-", "0.2`"}]},
           {
            RowBox[{"-", "0.2`"}], 
            RowBox[{"-", "0.2`"}], 
            RowBox[{"-", "0.2`"}], 
            RowBox[{"4", " ", "m"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"-", "4"}], " ", "m"}], 
            RowBox[{"-", "0.30000000000000004`"}], 
            RowBox[{"-", "0.30000000000000004`"}], 
            RowBox[{"-", "0.30000000000000004`"}]},
           {
            RowBox[{"-", "0.30000000000000004`"}], "0", 
            RowBox[{"-", "0.30000000000000004`"}], 
            RowBox[{"-", "0.30000000000000004`"}]},
           {
            RowBox[{"-", "0.30000000000000004`"}], 
            RowBox[{"-", "0.30000000000000004`"}], "0", 
            RowBox[{"-", "0.30000000000000004`"}]},
           {
            RowBox[{"-", "0.30000000000000004`"}], 
            RowBox[{"-", "0.30000000000000004`"}], 
            RowBox[{"-", "0.30000000000000004`"}], 
            RowBox[{"4", " ", "m"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"-", "4"}], " ", "m"}], 
            RowBox[{"-", "0.4`"}], 
            RowBox[{"-", "0.4`"}], 
            RowBox[{"-", "0.4`"}]},
           {
            RowBox[{"-", "0.4`"}], "0", 
            RowBox[{"-", "0.4`"}], 
            RowBox[{"-", "0.4`"}]},
           {
            RowBox[{"-", "0.4`"}], 
            RowBox[{"-", "0.4`"}], "0", 
            RowBox[{"-", "0.4`"}]},
           {
            RowBox[{"-", "0.4`"}], 
            RowBox[{"-", "0.4`"}], 
            RowBox[{"-", "0.4`"}], 
            RowBox[{"4", " ", "m"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"-", "4"}], " ", "m"}], 
            RowBox[{"-", "0.5`"}], 
            RowBox[{"-", "0.5`"}], 
            RowBox[{"-", "0.5`"}]},
           {
            RowBox[{"-", "0.5`"}], "0", 
            RowBox[{"-", "0.5`"}], 
            RowBox[{"-", "0.5`"}]},
           {
            RowBox[{"-", "0.5`"}], 
            RowBox[{"-", "0.5`"}], "0", 
            RowBox[{"-", "0.5`"}]},
           {
            RowBox[{"-", "0.5`"}], 
            RowBox[{"-", "0.5`"}], 
            RowBox[{"-", "0.5`"}], 
            RowBox[{"4", " ", "m"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"-", "4"}], " ", "m"}], 
            RowBox[{"-", "0.6000000000000001`"}], 
            RowBox[{"-", "0.6000000000000001`"}], 
            RowBox[{"-", "0.6000000000000001`"}]},
           {
            RowBox[{"-", "0.6000000000000001`"}], "0", 
            RowBox[{"-", "0.6000000000000001`"}], 
            RowBox[{"-", "0.6000000000000001`"}]},
           {
            RowBox[{"-", "0.6000000000000001`"}], 
            RowBox[{"-", "0.6000000000000001`"}], "0", 
            RowBox[{"-", "0.6000000000000001`"}]},
           {
            RowBox[{"-", "0.6000000000000001`"}], 
            RowBox[{"-", "0.6000000000000001`"}], 
            RowBox[{"-", "0.6000000000000001`"}], 
            RowBox[{"4", " ", "m"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"-", "4"}], " ", "m"}], 
            RowBox[{"-", "0.7000000000000001`"}], 
            RowBox[{"-", "0.7000000000000001`"}], 
            RowBox[{"-", "0.7000000000000001`"}]},
           {
            RowBox[{"-", "0.7000000000000001`"}], "0", 
            RowBox[{"-", "0.7000000000000001`"}], 
            RowBox[{"-", "0.7000000000000001`"}]},
           {
            RowBox[{"-", "0.7000000000000001`"}], 
            RowBox[{"-", "0.7000000000000001`"}], "0", 
            RowBox[{"-", "0.7000000000000001`"}]},
           {
            RowBox[{"-", "0.7000000000000001`"}], 
            RowBox[{"-", "0.7000000000000001`"}], 
            RowBox[{"-", "0.7000000000000001`"}], 
            RowBox[{"4", " ", "m"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"-", "4"}], " ", "m"}], 
            RowBox[{"-", "0.8`"}], 
            RowBox[{"-", "0.8`"}], 
            RowBox[{"-", "0.8`"}]},
           {
            RowBox[{"-", "0.8`"}], "0", 
            RowBox[{"-", "0.8`"}], 
            RowBox[{"-", "0.8`"}]},
           {
            RowBox[{"-", "0.8`"}], 
            RowBox[{"-", "0.8`"}], "0", 
            RowBox[{"-", "0.8`"}]},
           {
            RowBox[{"-", "0.8`"}], 
            RowBox[{"-", "0.8`"}], 
            RowBox[{"-", "0.8`"}], 
            RowBox[{"4", " ", "m"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"-", "4"}], " ", "m"}], 
            RowBox[{"-", "0.9`"}], 
            RowBox[{"-", "0.9`"}], 
            RowBox[{"-", "0.9`"}]},
           {
            RowBox[{"-", "0.9`"}], "0", 
            RowBox[{"-", "0.9`"}], 
            RowBox[{"-", "0.9`"}]},
           {
            RowBox[{"-", "0.9`"}], 
            RowBox[{"-", "0.9`"}], "0", 
            RowBox[{"-", "0.9`"}]},
           {
            RowBox[{"-", "0.9`"}], 
            RowBox[{"-", "0.9`"}], 
            RowBox[{"-", "0.9`"}], 
            RowBox[{"4", " ", "m"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"-", "4"}], " ", "m"}], 
            RowBox[{"-", "1.`"}], 
            RowBox[{"-", "1.`"}], 
            RowBox[{"-", "1.`"}]},
           {
            RowBox[{"-", "1.`"}], "0", 
            RowBox[{"-", "1.`"}], 
            RowBox[{"-", "1.`"}]},
           {
            RowBox[{"-", "1.`"}], 
            RowBox[{"-", "1.`"}], "0", 
            RowBox[{"-", "1.`"}]},
           {
            RowBox[{"-", "1.`"}], 
            RowBox[{"-", "1.`"}], 
            RowBox[{"-", "1.`"}], 
            RowBox[{"4", " ", "m"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"-", "4"}], " ", "m"}], 
            RowBox[{"-", "1.1`"}], 
            RowBox[{"-", "1.1`"}], 
            RowBox[{"-", "1.1`"}]},
           {
            RowBox[{"-", "1.1`"}], "0", 
            RowBox[{"-", "1.1`"}], 
            RowBox[{"-", "1.1`"}]},
           {
            RowBox[{"-", "1.1`"}], 
            RowBox[{"-", "1.1`"}], "0", 
            RowBox[{"-", "1.1`"}]},
           {
            RowBox[{"-", "1.1`"}], 
            RowBox[{"-", "1.1`"}], 
            RowBox[{"-", "1.1`"}], 
            RowBox[{"4", " ", "m"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"-", "4"}], " ", "m"}], 
            RowBox[{"-", "1.2000000000000002`"}], 
            RowBox[{"-", "1.2000000000000002`"}], 
            RowBox[{"-", "1.2000000000000002`"}]},
           {
            RowBox[{"-", "1.2000000000000002`"}], "0", 
            RowBox[{"-", "1.2000000000000002`"}], 
            RowBox[{"-", "1.2000000000000002`"}]},
           {
            RowBox[{"-", "1.2000000000000002`"}], 
            RowBox[{"-", "1.2000000000000002`"}], "0", 
            RowBox[{"-", "1.2000000000000002`"}]},
           {
            RowBox[{"-", "1.2000000000000002`"}], 
            RowBox[{"-", "1.2000000000000002`"}], 
            RowBox[{"-", "1.2000000000000002`"}], 
            RowBox[{"4", " ", "m"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"-", "4"}], " ", "m"}], 
            RowBox[{"-", "1.3`"}], 
            RowBox[{"-", "1.3`"}], 
            RowBox[{"-", "1.3`"}]},
           {
            RowBox[{"-", "1.3`"}], "0", 
            RowBox[{"-", "1.3`"}], 
            RowBox[{"-", "1.3`"}]},
           {
            RowBox[{"-", "1.3`"}], 
            RowBox[{"-", "1.3`"}], "0", 
            RowBox[{"-", "1.3`"}]},
           {
            RowBox[{"-", "1.3`"}], 
            RowBox[{"-", "1.3`"}], 
            RowBox[{"-", "1.3`"}], 
            RowBox[{"4", " ", "m"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"-", "4"}], " ", "m"}], 
            RowBox[{"-", "1.4000000000000001`"}], 
            RowBox[{"-", "1.4000000000000001`"}], 
            RowBox[{"-", "1.4000000000000001`"}]},
           {
            RowBox[{"-", "1.4000000000000001`"}], "0", 
            RowBox[{"-", "1.4000000000000001`"}], 
            RowBox[{"-", "1.4000000000000001`"}]},
           {
            RowBox[{"-", "1.4000000000000001`"}], 
            RowBox[{"-", "1.4000000000000001`"}], "0", 
            RowBox[{"-", "1.4000000000000001`"}]},
           {
            RowBox[{"-", "1.4000000000000001`"}], 
            RowBox[{"-", "1.4000000000000001`"}], 
            RowBox[{"-", "1.4000000000000001`"}], 
            RowBox[{"4", " ", "m"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"-", "4"}], " ", "m"}], 
            RowBox[{"-", "1.5`"}], 
            RowBox[{"-", "1.5`"}], 
            RowBox[{"-", "1.5`"}]},
           {
            RowBox[{"-", "1.5`"}], "0", 
            RowBox[{"-", "1.5`"}], 
            RowBox[{"-", "1.5`"}]},
           {
            RowBox[{"-", "1.5`"}], 
            RowBox[{"-", "1.5`"}], "0", 
            RowBox[{"-", "1.5`"}]},
           {
            RowBox[{"-", "1.5`"}], 
            RowBox[{"-", "1.5`"}], 
            RowBox[{"-", "1.5`"}], 
            RowBox[{"4", " ", "m"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"-", "4"}], " ", "m"}], 
            RowBox[{"-", "1.6`"}], 
            RowBox[{"-", "1.6`"}], 
            RowBox[{"-", "1.6`"}]},
           {
            RowBox[{"-", "1.6`"}], "0", 
            RowBox[{"-", "1.6`"}], 
            RowBox[{"-", "1.6`"}]},
           {
            RowBox[{"-", "1.6`"}], 
            RowBox[{"-", "1.6`"}], "0", 
            RowBox[{"-", "1.6`"}]},
           {
            RowBox[{"-", "1.6`"}], 
            RowBox[{"-", "1.6`"}], 
            RowBox[{"-", "1.6`"}], 
            RowBox[{"4", " ", "m"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"-", "4"}], " ", "m"}], 
            RowBox[{"-", "1.7000000000000002`"}], 
            RowBox[{"-", "1.7000000000000002`"}], 
            RowBox[{"-", "1.7000000000000002`"}]},
           {
            RowBox[{"-", "1.7000000000000002`"}], "0", 
            RowBox[{"-", "1.7000000000000002`"}], 
            RowBox[{"-", "1.7000000000000002`"}]},
           {
            RowBox[{"-", "1.7000000000000002`"}], 
            RowBox[{"-", "1.7000000000000002`"}], "0", 
            RowBox[{"-", "1.7000000000000002`"}]},
           {
            RowBox[{"-", "1.7000000000000002`"}], 
            RowBox[{"-", "1.7000000000000002`"}], 
            RowBox[{"-", "1.7000000000000002`"}], 
            RowBox[{"4", " ", "m"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"-", "4"}], " ", "m"}], 
            RowBox[{"-", "1.8`"}], 
            RowBox[{"-", "1.8`"}], 
            RowBox[{"-", "1.8`"}]},
           {
            RowBox[{"-", "1.8`"}], "0", 
            RowBox[{"-", "1.8`"}], 
            RowBox[{"-", "1.8`"}]},
           {
            RowBox[{"-", "1.8`"}], 
            RowBox[{"-", "1.8`"}], "0", 
            RowBox[{"-", "1.8`"}]},
           {
            RowBox[{"-", "1.8`"}], 
            RowBox[{"-", "1.8`"}], 
            RowBox[{"-", "1.8`"}], 
            RowBox[{"4", " ", "m"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"-", "4"}], " ", "m"}], 
            RowBox[{"-", "1.9000000000000001`"}], 
            RowBox[{"-", "1.9000000000000001`"}], 
            RowBox[{"-", "1.9000000000000001`"}]},
           {
            RowBox[{"-", "1.9000000000000001`"}], "0", 
            RowBox[{"-", "1.9000000000000001`"}], 
            RowBox[{"-", "1.9000000000000001`"}]},
           {
            RowBox[{"-", "1.9000000000000001`"}], 
            RowBox[{"-", "1.9000000000000001`"}], "0", 
            RowBox[{"-", "1.9000000000000001`"}]},
           {
            RowBox[{"-", "1.9000000000000001`"}], 
            RowBox[{"-", "1.9000000000000001`"}], 
            RowBox[{"-", "1.9000000000000001`"}], 
            RowBox[{"4", " ", "m"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"-", "4"}], " ", "m"}], 
            RowBox[{"-", "2.`"}], 
            RowBox[{"-", "2.`"}], 
            RowBox[{"-", "2.`"}]},
           {
            RowBox[{"-", "2.`"}], "0", 
            RowBox[{"-", "2.`"}], 
            RowBox[{"-", "2.`"}]},
           {
            RowBox[{"-", "2.`"}], 
            RowBox[{"-", "2.`"}], "0", 
            RowBox[{"-", "2.`"}]},
           {
            RowBox[{"-", "2.`"}], 
            RowBox[{"-", "2.`"}], 
            RowBox[{"-", "2.`"}], 
            RowBox[{"4", " ", "m"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.784400420577902*^9, 3.7844006204279757`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"628832c7-1d24-470a-bc38-3d4b9546e4ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"]}], "+", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{
         TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "4"}], " ", "m"}], "0.`", "0.`", "0.`"},
             {"0.`", "0", "0.`", "0.`"},
             {"0.`", "0.`", "0", "0.`"},
             {"0.`", "0.`", "0.`", 
              RowBox[{"4", " ", "m"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"]}], "+", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{
         TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "4"}], " ", "m"}], 
              RowBox[{"-", "0.1`"}], 
              RowBox[{"-", "0.1`"}], 
              RowBox[{"-", "0.1`"}]},
             {
              RowBox[{"-", "0.1`"}], "0", 
              RowBox[{"-", "0.1`"}], 
              RowBox[{"-", "0.1`"}]},
             {
              RowBox[{"-", "0.1`"}], 
              RowBox[{"-", "0.1`"}], "0", 
              RowBox[{"-", "0.1`"}]},
             {
              RowBox[{"-", "0.1`"}], 
              RowBox[{"-", "0.1`"}], 
              RowBox[{"-", "0.1`"}], 
              RowBox[{"4", " ", "m"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"]}], "+", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{
         TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "4"}], " ", "m"}], 
              RowBox[{"-", "0.2`"}], 
              RowBox[{"-", "0.2`"}], 
              RowBox[{"-", "0.2`"}]},
             {
              RowBox[{"-", "0.2`"}], "0", 
              RowBox[{"-", "0.2`"}], 
              RowBox[{"-", "0.2`"}]},
             {
              RowBox[{"-", "0.2`"}], 
              RowBox[{"-", "0.2`"}], "0", 
              RowBox[{"-", "0.2`"}]},
             {
              RowBox[{"-", "0.2`"}], 
              RowBox[{"-", "0.2`"}], 
              RowBox[{"-", "0.2`"}], 
              RowBox[{"4", " ", "m"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"]}], "+", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{
         TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "4"}], " ", "m"}], 
              RowBox[{"-", "0.30000000000000004`"}], 
              RowBox[{"-", "0.30000000000000004`"}], 
              RowBox[{"-", "0.30000000000000004`"}]},
             {
              RowBox[{"-", "0.30000000000000004`"}], "0", 
              RowBox[{"-", "0.30000000000000004`"}], 
              RowBox[{"-", "0.30000000000000004`"}]},
             {
              RowBox[{"-", "0.30000000000000004`"}], 
              RowBox[{"-", "0.30000000000000004`"}], "0", 
              RowBox[{"-", "0.30000000000000004`"}]},
             {
              RowBox[{"-", "0.30000000000000004`"}], 
              RowBox[{"-", "0.30000000000000004`"}], 
              RowBox[{"-", "0.30000000000000004`"}], 
              RowBox[{"4", " ", "m"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"]}], "+", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{
         TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "4"}], " ", "m"}], 
              RowBox[{"-", "0.4`"}], 
              RowBox[{"-", "0.4`"}], 
              RowBox[{"-", "0.4`"}]},
             {
              RowBox[{"-", "0.4`"}], "0", 
              RowBox[{"-", "0.4`"}], 
              RowBox[{"-", "0.4`"}]},
             {
              RowBox[{"-", "0.4`"}], 
              RowBox[{"-", "0.4`"}], "0", 
              RowBox[{"-", "0.4`"}]},
             {
              RowBox[{"-", "0.4`"}], 
              RowBox[{"-", "0.4`"}], 
              RowBox[{"-", "0.4`"}], 
              RowBox[{"4", " ", "m"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"]}], "+", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{
         TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "4"}], " ", "m"}], 
              RowBox[{"-", "0.5`"}], 
              RowBox[{"-", "0.5`"}], 
              RowBox[{"-", "0.5`"}]},
             {
              RowBox[{"-", "0.5`"}], "0", 
              RowBox[{"-", "0.5`"}], 
              RowBox[{"-", "0.5`"}]},
             {
              RowBox[{"-", "0.5`"}], 
              RowBox[{"-", "0.5`"}], "0", 
              RowBox[{"-", "0.5`"}]},
             {
              RowBox[{"-", "0.5`"}], 
              RowBox[{"-", "0.5`"}], 
              RowBox[{"-", "0.5`"}], 
              RowBox[{"4", " ", "m"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"]}], "+", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{
         TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "4"}], " ", "m"}], 
              RowBox[{"-", "0.6000000000000001`"}], 
              RowBox[{"-", "0.6000000000000001`"}], 
              RowBox[{"-", "0.6000000000000001`"}]},
             {
              RowBox[{"-", "0.6000000000000001`"}], "0", 
              RowBox[{"-", "0.6000000000000001`"}], 
              RowBox[{"-", "0.6000000000000001`"}]},
             {
              RowBox[{"-", "0.6000000000000001`"}], 
              RowBox[{"-", "0.6000000000000001`"}], "0", 
              RowBox[{"-", "0.6000000000000001`"}]},
             {
              RowBox[{"-", "0.6000000000000001`"}], 
              RowBox[{"-", "0.6000000000000001`"}], 
              RowBox[{"-", "0.6000000000000001`"}], 
              RowBox[{"4", " ", "m"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"]}], "+", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{
         TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "4"}], " ", "m"}], 
              RowBox[{"-", "0.7000000000000001`"}], 
              RowBox[{"-", "0.7000000000000001`"}], 
              RowBox[{"-", "0.7000000000000001`"}]},
             {
              RowBox[{"-", "0.7000000000000001`"}], "0", 
              RowBox[{"-", "0.7000000000000001`"}], 
              RowBox[{"-", "0.7000000000000001`"}]},
             {
              RowBox[{"-", "0.7000000000000001`"}], 
              RowBox[{"-", "0.7000000000000001`"}], "0", 
              RowBox[{"-", "0.7000000000000001`"}]},
             {
              RowBox[{"-", "0.7000000000000001`"}], 
              RowBox[{"-", "0.7000000000000001`"}], 
              RowBox[{"-", "0.7000000000000001`"}], 
              RowBox[{"4", " ", "m"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"]}], "+", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{
         TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "4"}], " ", "m"}], 
              RowBox[{"-", "0.8`"}], 
              RowBox[{"-", "0.8`"}], 
              RowBox[{"-", "0.8`"}]},
             {
              RowBox[{"-", "0.8`"}], "0", 
              RowBox[{"-", "0.8`"}], 
              RowBox[{"-", "0.8`"}]},
             {
              RowBox[{"-", "0.8`"}], 
              RowBox[{"-", "0.8`"}], "0", 
              RowBox[{"-", "0.8`"}]},
             {
              RowBox[{"-", "0.8`"}], 
              RowBox[{"-", "0.8`"}], 
              RowBox[{"-", "0.8`"}], 
              RowBox[{"4", " ", "m"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"]}], "+", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{
         TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "4"}], " ", "m"}], 
              RowBox[{"-", "0.9`"}], 
              RowBox[{"-", "0.9`"}], 
              RowBox[{"-", "0.9`"}]},
             {
              RowBox[{"-", "0.9`"}], "0", 
              RowBox[{"-", "0.9`"}], 
              RowBox[{"-", "0.9`"}]},
             {
              RowBox[{"-", "0.9`"}], 
              RowBox[{"-", "0.9`"}], "0", 
              RowBox[{"-", "0.9`"}]},
             {
              RowBox[{"-", "0.9`"}], 
              RowBox[{"-", "0.9`"}], 
              RowBox[{"-", "0.9`"}], 
              RowBox[{"4", " ", "m"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"]}], "+", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{
         TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "4"}], " ", "m"}], 
              RowBox[{"-", "1.`"}], 
              RowBox[{"-", "1.`"}], 
              RowBox[{"-", "1.`"}]},
             {
              RowBox[{"-", "1.`"}], "0", 
              RowBox[{"-", "1.`"}], 
              RowBox[{"-", "1.`"}]},
             {
              RowBox[{"-", "1.`"}], 
              RowBox[{"-", "1.`"}], "0", 
              RowBox[{"-", "1.`"}]},
             {
              RowBox[{"-", "1.`"}], 
              RowBox[{"-", "1.`"}], 
              RowBox[{"-", "1.`"}], 
              RowBox[{"4", " ", "m"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"]}], "+", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{
         TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "4"}], " ", "m"}], 
              RowBox[{"-", "1.1`"}], 
              RowBox[{"-", "1.1`"}], 
              RowBox[{"-", "1.1`"}]},
             {
              RowBox[{"-", "1.1`"}], "0", 
              RowBox[{"-", "1.1`"}], 
              RowBox[{"-", "1.1`"}]},
             {
              RowBox[{"-", "1.1`"}], 
              RowBox[{"-", "1.1`"}], "0", 
              RowBox[{"-", "1.1`"}]},
             {
              RowBox[{"-", "1.1`"}], 
              RowBox[{"-", "1.1`"}], 
              RowBox[{"-", "1.1`"}], 
              RowBox[{"4", " ", "m"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"]}], "+", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{
         TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "4"}], " ", "m"}], 
              RowBox[{"-", "1.2000000000000002`"}], 
              RowBox[{"-", "1.2000000000000002`"}], 
              RowBox[{"-", "1.2000000000000002`"}]},
             {
              RowBox[{"-", "1.2000000000000002`"}], "0", 
              RowBox[{"-", "1.2000000000000002`"}], 
              RowBox[{"-", "1.2000000000000002`"}]},
             {
              RowBox[{"-", "1.2000000000000002`"}], 
              RowBox[{"-", "1.2000000000000002`"}], "0", 
              RowBox[{"-", "1.2000000000000002`"}]},
             {
              RowBox[{"-", "1.2000000000000002`"}], 
              RowBox[{"-", "1.2000000000000002`"}], 
              RowBox[{"-", "1.2000000000000002`"}], 
              RowBox[{"4", " ", "m"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"]}], "+", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{
         TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "4"}], " ", "m"}], 
              RowBox[{"-", "1.3`"}], 
              RowBox[{"-", "1.3`"}], 
              RowBox[{"-", "1.3`"}]},
             {
              RowBox[{"-", "1.3`"}], "0", 
              RowBox[{"-", "1.3`"}], 
              RowBox[{"-", "1.3`"}]},
             {
              RowBox[{"-", "1.3`"}], 
              RowBox[{"-", "1.3`"}], "0", 
              RowBox[{"-", "1.3`"}]},
             {
              RowBox[{"-", "1.3`"}], 
              RowBox[{"-", "1.3`"}], 
              RowBox[{"-", "1.3`"}], 
              RowBox[{"4", " ", "m"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"]}], "+", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{
         TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "4"}], " ", "m"}], 
              RowBox[{"-", "1.4000000000000001`"}], 
              RowBox[{"-", "1.4000000000000001`"}], 
              RowBox[{"-", "1.4000000000000001`"}]},
             {
              RowBox[{"-", "1.4000000000000001`"}], "0", 
              RowBox[{"-", "1.4000000000000001`"}], 
              RowBox[{"-", "1.4000000000000001`"}]},
             {
              RowBox[{"-", "1.4000000000000001`"}], 
              RowBox[{"-", "1.4000000000000001`"}], "0", 
              RowBox[{"-", "1.4000000000000001`"}]},
             {
              RowBox[{"-", "1.4000000000000001`"}], 
              RowBox[{"-", "1.4000000000000001`"}], 
              RowBox[{"-", "1.4000000000000001`"}], 
              RowBox[{"4", " ", "m"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"]}], "+", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{
         TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "4"}], " ", "m"}], 
              RowBox[{"-", "1.5`"}], 
              RowBox[{"-", "1.5`"}], 
              RowBox[{"-", "1.5`"}]},
             {
              RowBox[{"-", "1.5`"}], "0", 
              RowBox[{"-", "1.5`"}], 
              RowBox[{"-", "1.5`"}]},
             {
              RowBox[{"-", "1.5`"}], 
              RowBox[{"-", "1.5`"}], "0", 
              RowBox[{"-", "1.5`"}]},
             {
              RowBox[{"-", "1.5`"}], 
              RowBox[{"-", "1.5`"}], 
              RowBox[{"-", "1.5`"}], 
              RowBox[{"4", " ", "m"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"]}], "+", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{
         TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "4"}], " ", "m"}], 
              RowBox[{"-", "1.6`"}], 
              RowBox[{"-", "1.6`"}], 
              RowBox[{"-", "1.6`"}]},
             {
              RowBox[{"-", "1.6`"}], "0", 
              RowBox[{"-", "1.6`"}], 
              RowBox[{"-", "1.6`"}]},
             {
              RowBox[{"-", "1.6`"}], 
              RowBox[{"-", "1.6`"}], "0", 
              RowBox[{"-", "1.6`"}]},
             {
              RowBox[{"-", "1.6`"}], 
              RowBox[{"-", "1.6`"}], 
              RowBox[{"-", "1.6`"}], 
              RowBox[{"4", " ", "m"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"]}], "+", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{
         TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "4"}], " ", "m"}], 
              RowBox[{"-", "1.7000000000000002`"}], 
              RowBox[{"-", "1.7000000000000002`"}], 
              RowBox[{"-", "1.7000000000000002`"}]},
             {
              RowBox[{"-", "1.7000000000000002`"}], "0", 
              RowBox[{"-", "1.7000000000000002`"}], 
              RowBox[{"-", "1.7000000000000002`"}]},
             {
              RowBox[{"-", "1.7000000000000002`"}], 
              RowBox[{"-", "1.7000000000000002`"}], "0", 
              RowBox[{"-", "1.7000000000000002`"}]},
             {
              RowBox[{"-", "1.7000000000000002`"}], 
              RowBox[{"-", "1.7000000000000002`"}], 
              RowBox[{"-", "1.7000000000000002`"}], 
              RowBox[{"4", " ", "m"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"]}], "+", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{
         TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "4"}], " ", "m"}], 
              RowBox[{"-", "1.8`"}], 
              RowBox[{"-", "1.8`"}], 
              RowBox[{"-", "1.8`"}]},
             {
              RowBox[{"-", "1.8`"}], "0", 
              RowBox[{"-", "1.8`"}], 
              RowBox[{"-", "1.8`"}]},
             {
              RowBox[{"-", "1.8`"}], 
              RowBox[{"-", "1.8`"}], "0", 
              RowBox[{"-", "1.8`"}]},
             {
              RowBox[{"-", "1.8`"}], 
              RowBox[{"-", "1.8`"}], 
              RowBox[{"-", "1.8`"}], 
              RowBox[{"4", " ", "m"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"]}], "+", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{
         TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "4"}], " ", "m"}], 
              RowBox[{"-", "1.9000000000000001`"}], 
              RowBox[{"-", "1.9000000000000001`"}], 
              RowBox[{"-", "1.9000000000000001`"}]},
             {
              RowBox[{"-", "1.9000000000000001`"}], "0", 
              RowBox[{"-", "1.9000000000000001`"}], 
              RowBox[{"-", "1.9000000000000001`"}]},
             {
              RowBox[{"-", "1.9000000000000001`"}], 
              RowBox[{"-", "1.9000000000000001`"}], "0", 
              RowBox[{"-", "1.9000000000000001`"}]},
             {
              RowBox[{"-", "1.9000000000000001`"}], 
              RowBox[{"-", "1.9000000000000001`"}], 
              RowBox[{"-", "1.9000000000000001`"}], 
              RowBox[{"4", " ", "m"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["m", "2"]}], "+", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{
         TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "4"}], " ", "m"}], 
              RowBox[{"-", "2.`"}], 
              RowBox[{"-", "2.`"}], 
              RowBox[{"-", "2.`"}]},
             {
              RowBox[{"-", "2.`"}], "0", 
              RowBox[{"-", "2.`"}], 
              RowBox[{"-", "2.`"}]},
             {
              RowBox[{"-", "2.`"}], 
              RowBox[{"-", "2.`"}], "0", 
              RowBox[{"-", "2.`"}]},
             {
              RowBox[{"-", "2.`"}], 
              RowBox[{"-", "2.`"}], 
              RowBox[{"-", "2.`"}], 
              RowBox[{"4", " ", "m"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.784400489698474*^9, 3.78440050742772*^9}, 
   3.784400669846581*^9},
 CellLabel->"In[45]:=",ExpressionUUID->"c73aed7a-5d15-43bc-b72e-2eccb786330c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
kmdUSbKE//segfD/3yP8D/TIZpg=
       "]]},
     Annotation[#, "Charting`Private`Tag$18084#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$18084#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
B8y5lIc=
       "]]},
     Annotation[#, "Charting`Private`Tag$18084#3"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
pEwjgUtVL89s4UC+8NWxrufTqOi43yqZtRxgywRfxRqmUaqYdFArHwcKNvpn
OWJMFCkSev/RJzbwHPOm8AYzUYPVr3fvzNiguN9BZWsoEwUt2lYYmbBhiwmy
dY1hIq6rDabPNxP5iKL4u6rHTCSlKy90SIkNNb2vbvtUMdGtnCdev2eXIcBl
SfEni4mKLp2cG3q2DOPH71gV3ZhBd7c4Cz9hLgFm7Xf9Z+QM0kz9liYyvgRy
psdL+eJnUNtAS8X530uwT2mTzKmnM4icKRk837gE2f0dg9L4DGoSGbQ5kLIE
LicVgm+umEVyeStm+7YuQZvri7wjt2fRREr95kw3FoSp3zSeuTOLfI+QC0ft
WWAwYvfl4f1Z1LRPtU7FkgXp57HpvuxZtDpy5MOZTSw4H+BoeubDLLLIvSBo
yVoEgbu836+yZ9GQcO09p4RF2P3mFNfzoDnkFfdLvaBkAV6vVDg+d2EeDT3/
KSFaPwcj2vueXvGbR9Vif41XVsyBnNXlQdrVeXS36W04O3sOrkW2eI7FziMn
C6vAN2FzYMYJufgzfx4JhDv+Dds1Bx303pvvh+aR1g6/wpvVs0DtfJJ902UB
7Yj+oSOWPwOaqapj/AcWkccc7Vak/TQ81ggM0rRbRI/EbblOk6ZBpOyzwF6X
RVSdRtEy0J6G6Y+B68MuLKKxYSvPbGwa8Jkv55buLqJtgTsevi1gwLHDIRT6
l0VUxNFt7GRNQYJAJ+PnIRbCDetDGhLpsBhwe7nQdgll6vM8lpCfhMlFRdH8
bWyU8OLd+vDRPsg8E9WlqI6RMLXcO2Pmz1DCrs935TVWkEpX/70hW/sXifoU
7q6X5iLhIS0dBj4MVGv2tqZSgZukZ3s0fnTXMlr2PmnoIMpDelYqEiOmyUNa
wd/xWHuZh7TDvMmgjCNIMrS4XGeF8ZF+KGywXn9ejLTYVzQmzeAjJctT05d/
SJLMLjQnHJzlI6WbmA40jkiS7rH+bYtY5CPp9Z5ITpqVJKkoKMYwufhJl0Wk
D22XkSKZO8as75TkJw14eotW20uRkr95nksw4CeRzO69TvkuRdJtUiILBfOT
Jn66FWb2SJOC7I2Td1/nJ7n6eArNjUmTPgzZ7wgJ5SfVytn+OrwgTbLjvnd3
PIafJPCN8VlKQYZ0lcTSaU7lJ0n1OS9/PSZDaq7q9o6o5ie5PfS7ozggQ5Kw
mpauwflJvsqRC2/pMiSXn6K1zAZ+Uo9yfM/RFbIk2txeUY8v/CSZ+NjxQjVZ
kozBq+Ld/fykZxt3OIZ7ypJcG746hPwl+hemdNAsQJb0wnaSXTZC3H+AXSEY
JUvacVntkCqNn1S15V1XVr4sKXKF6ZzTND9px8cHcX7vZEntCc5PE+b4SSkf
Lr/b3yJLUlDxN29m8ZOa+mzs1/XKkv7v+w3S/3+/8T8fWPCP
       "]]},
     Annotation[#, "Charting`Private`Tag$18084#4"]& ], 
    TagBox[
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
3Rrq//1eg/r/v9f4H16CFmw=
       "]]},
     Annotation[#, "Charting`Private`Tag$18084#5"]& ], 
    TagBox[
     {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
R1Y4Y+c8ovd6Gupa/4HEM6FNsmtodJppTSzPsQfwQKfmrvRagm4nopp1TKwL
Cbtm7i0V56LTHh9jX0obRcV6Hz99kOGms8g8tYagWTTnYqthLsxDT3wbuOF0
DTed4GuI3TDHQ9ecexdj+VKArmHg/tmItogetd2SiNu7jM7peNUvPraIvvPO
wa+aOcvpes5VDw5NLqKXrUnJFyKX0+/N/N0ZzFlEP3quQqLr+3K6vIzsLTYX
H1098IbMY+Zyur7FrfWNy/no88pT+js3i9Gj6p3OP9jORydfn9Q6ki1GV61Y
OSx4nY/uYxGf8j1XnH7t2O6ovTfw8Uhfk02l4vSSnmOaXgF8dDrl7RLeKE4/
yn3v7sAtPvpgYwvTji1O96bPbKx6wkffcsZ85S4NCXpVQYtLcBEfPXDyhmJx
gQRd1Ghc/BPJR1fee/C9fbUE3apNuJhdxkd/qWb9bnGHBJ05tU/Y8Rsf/ayi
8dz5OQm6xPZ3WXt/4/G05RfY0CXpdmXfzb26+ejGfR2flEwk6S/Mhubf9PLR
pXKPbh4/JUnXdFc4sprJR5e/cMA69qYkPYTQnrIcx9errpW+HCVJr3twPOHB
FB+9tSZbzyRVki4jf0W/aoaPbvec9WvbB0n6/38fQ9///9/H/A9cW17Y
       "]]},
     Annotation[#, "Charting`Private`Tag$18084#6"]& ], 
    TagBox[
     {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt2nk0ld/XAPB7n8ykwUxJlKRJQkLOTUpSSkn0JZpLpiQVTUQpQ5IMTaaI
MkYpZJ+SISpjNIjMwx3M873Xe35rvf+wPms9697nOWfvffZ+1l161H3fCYpG
oy0mf/73/1hW+MDsrDDWPtSVKJkhx5CeUVQ35ArjkLcHzQaeyjE+b0+2954U
xs5iCl71YXIM9Zb3X1iDwrhb9/rJFA85Rr9ER9KvNmFsFB6d6a0jx/Bw1rXN
LRHGkRXtX3CRLOPa8t/45G1hzIhuV5qplmE8eqwW8U1SGBvkzYkXpksz4lqD
3K1EhbCWtpp/0bb5DNma/XtWygjiGs3jA8biYoyKvftNq5YL4Oay4PRqJQHG
jpXLvdRU5+AdHFHNSSsuMsi0T6leR+EY/XSJJNVhNH33pJT2SjpmPJUpvLH+
HxqbeP7w8AoapokqHXUTSIXPqhE6xa58oKn50+l6/8BQ8HruquNccJI+/V5d
jwORjI0bt1ydhrwNWetYBaMwp2zgb9WFaXieVa9qVD0KnhapATZu06B1pSv1
WscoWNko1J11nIZlSmHuf8THQNJlxiVqyzTseG84MvLfGARFQyJTcBp6G+n6
CVNjcIVjJhkVNgWmkudGBjQn4NgT267+uEnQyhfjXj4xBeF5PZvroyfheL/U
0o6LU1D81Tuq8N4k2CtPPTW6OwWKvEizkOuTEFBsl4gzp6DGoTZtjeMk0AQ/
9EtMTIHxkp1uHsqTULOiYkV+wDQoJBpOjD2ZgFTNfdMHI2dge0HlnpbICVi9
2+D5t+cz4FVnl1oWMgGdaup4w5sZqKEu2UVfmYDBm0+san/MwK1jeYX69hPg
ssV61EqWC6PL1tzwVZqAvaK5ws6RXKh+oSxKfzQO47O71bgBPHBiY7pXxDhY
+3hE34ngwbD2senuu+PgtqrksWg8D6SLXzC/+o5D0BVP27YCHtg2aH2PcRiH
u0UhBQMDPGinbX2gtXQcXs/s7g86yIdxu1OLnVLHoIUefD130SzcjhOVrY8f
g5NKkxCpMQvyXa8kt8eOQTOjMvO0ziwYegzOrro7Btv3wONei1m4cety+8TZ
MXBT1qzZ4TMLYrnBL+6tG4P5J5vvBzfMgrJE9np4Owqnv9Wp3Ec07Nap0Xwv
cxTy+HRzpW00XFyUcMspZRQSLuzNfbqThh1cH/yhR42CePk5q+ADNPzku3eg
6YVRSLusWCl6loYV7m/+9WXDKLxjth+LjKRhadmqGw3ZI/DMZeXG7jYaPs7Z
uio5dQTsjXtMfLppOK+s6MeF+BE4fCI4XYhJw/svZmrKhY8A6/qRpyKjNBzx
836DnfsI2Mx9ND9HkI7nPbbVaF0zAskK2xc/XEHHYird1X0vh6HtxELNnBN0
3PxEpOpf4jBMvFGhm5yh4wyFVWVNj4ZBaxCeVrnQ8V4pj6LSu8Mw2bpu9Zfz
dBwlNJ2a4DwMhavzP7j60bEqe66/neYwVJrUvXN4TMejZ7Su7lUdBvfOyvO+
z+i4tHvfJTPFYWi00BaOSKDj0/+i3XTFhoG9aVdR2gs6zqxf+t+C/iGwvrzo
5s1cOjYs0NX5kjYE9kY9yW1f6Fhio+06nDAE34K1/EO/0nFLro9mfuwQjEV0
WmhX07F/Bqgk3xmC9MBFGScb6Lgi3nyu35kh8HYy+e7TQsfWtx269VcOQeqB
HdVWQ3SsLnCjbd3SIdB4uHFt6AgdT9xIbFZXGIJR+5H7H8fo+JFPT5206BAY
3RBwk5mm43+u52CwdxDqTj94foaisIt1YExq6iDotrd4lS6gcAK/YINmwiD4
dT+af16Kwo2pg99fxQ6Cp79ftqIMhRm8/wSz7g7CqrsulK08haVTtD3fuAzC
ev9w2WBlCpvvPT1344lBqCk+NSOiQuFr009T3zkMgmJqx8CNpRTutRRtLbQc
hKCyvLmOyyj8YaLV4hPZHOHE/O0NKyk8nCDTs3XlIBy8/axOdRWFV+yy8C9d
OgiiXiY+Z1dT+H7823cVCwdBKoGvylxL4aoIRYtnfQOwdNFdoecbKKzXE+iX
8HsA8n4EPSnRoXC84VD+86oB+Nkn8N9fXQp7dZYve5UxAPsPi9rObqTwIr0L
/PxzAyDvMnCDZ0jhW3f/6RQeHYCXUefucIwoPNhicbZ4/wCsz+8o/7WZwp9v
q/78rDsAXNcg9jNE4bXNoZIV6gPQUGrw8xKD1GGtKdMquQGwTmye3bWFwq6/
qnNqpzig/Xne3E4TCv9cY9jb0M+BTI1N4ylbKWzin6L88w8H6v7zVztuSmHZ
VVeDWz5wwKuszOrbNgoXX9E8wfTjQI+OxPr/dlBYo/bhY44nB9ZXLXQfJI5Y
Tq8bOsaBj73raTfMKXzye5Px5DYOvHHwUgvbSeEa1a0XZkhdH/O4+l7CgsIG
FzNf8VdwYGO488tA4nkqgfKCYhz4NNP2/OQuCvt4DVqKzLCh4KLr6+/EnRX/
BYqz2MBwaVVdv5vClovLCyX/smGdwZbJUOJ357SHF3xng0ZdnE4XsWrZUw0Z
YMPJQvHfepYUDlEUdZTPZoO7Ymy/P/G4m9dDpQQ2yL9zPP2F2KmktUo5gg3+
Ir4HxPZQ2Gzz5Im/fmyg2t5c2km8Nn8+7ck5NjS6GcgEEMusX/no0BE2XPlZ
viafmPtyi46CFRsW+KmWdhB3LDv0vYlBPl9KukV0L4Urn3mejtJiw/Xgs74r
iXPkg6kDKmwIMOXFmRDHRCQ9kZrPhkpakuUB4usSRXp1sywIGze8e4T45K2G
mvABFlT/Tj9wing3je28p5UFb1ituSeJdXwEBSWrWdBHK33hSKw0ujjuazEL
JEOtdPYRU256m4IzWeCce8PemLivx7Le/BkLXCz3qy0jrjlyylUkjAUPuNXB
c4jz/1wXLr/KgoWr58Q2k+d5diAmIdCVBW3qs7uziAOrsw1NHViQpdyc4Uvs
Yv7lB7WbBd367wq3EO8vaXP/aMSCgUf5PnRig83TojdWs+CwtwCngKy3yPpV
xjxxFtB6dvMViQdebv1ZOMOE9uAPCR/J/jUus/f0YTIhs91J6Cjxc/nQlIlK
JjCSXFXCSTwERyQz3hYwYdf5K82LiT0lin97vWRCzh/RU8kknrbQBiSH7zBh
7gHtsQQSfxo+wmnZl5mAIWVWlnj+6JKt7meYUBS+qzuQxGtLz96LrB1MCPLQ
sLEi8Vx65MyCV/pMcPNy7c4wo3D6H79XZzSYwOmgHxEg9ql+3dotzISdj/3V
4kh+HDGvupw80Q+31d94dpD82VHSIXW8px/UcUnB0v/lU770jrayfrL+e0xD
SP69fuad/SewHyw3vk5RIPkbK39v56ML/UDbo6a+1pjCNyJedNqe6AeHmI4i
I5Lvlrd+yjea9kOYmAJjB6kP/a4GfjVz+kH4weW5CqR+qG7mW5X69YFayRzH
5DVkPxdsXh3r2QdCj6O2nyf16lq3r5DrsT44s2WNiRGpZ7/vTRVIb+uDnf3N
N0GDwg/aR9WOi/TBVqPx6GA1CgsEMceoe73AmHlquZnU19f2mjWN13shpEBb
r1iW5Mv6My9fevSCh+0bkhEULvrdfXjfvl7YvSO3fdlCCl9Y016eINML+156
mX8Sp3B33c9YxpMe2CIe+1GVT8eRL+S8pEN7YDCAlX6IS8cmV2wse6/2QP9F
yzVh5Hx4tryBCnfsgfTP1rM943R88FL12VbVHgh3qj59aoCcR4vLNl9L64aa
5Q/dY1vpOO10blvh2y547tE7wyqi44ajcUssUrqgPCozxr2AjmkOwQ6/H3aB
XND8EnY+HdtYHfs16dUF/TdM/za/pmPKQKpWd0MX1N2NGr6VSseHxM/jrKxO
4Fylqy94QM73TO24pNQOaLZ3TNUh57vzSI598KM2mLswLOHZLA2vvSZoJ6T2
B0LOLdcxUaNhxYKa6F6BP7A3qnoLpULDguOPGyu7f0P+ojPsT4touNlV2/re
y98g9sN6+3ZZGr7r4LhHXvs3zCsIl7URpeEeo/fbNLf8Aq05M43bWmchfsZF
29KxCV5uO5blSvqnkI3657S2NMHGPds/G3rNwsXzc7IXqjXBvVN2IXPdZsGS
GbumqbsRqC8X/IuOzALvd5mGk1sjnHV4p7DTfBYOFags8bz6A2Bk3EpHYRak
LjeIRz2uB8/cdMeSIj5Mzk4tGPAhDhubl/uWDy23lsjvOFQP6Q8d36dl8yE1
0nnZtHw9nH6ga57+nA/G2bTNh6Pq4GzIijCRUD6c6Vntpn6/FnZl7Ihd68gH
S7d9Xtc9aiGwMlU02o4POmMXfX7uqQUh0zdJwtZ84FMlt+5K1kL6leFYujkf
IpXt4jjBNbDVcuDkoQ18uPZKLMF1bjXM9lqFZIjywfz9gYwlX7+DQMBn43gB
PkiXx7+vvfsdUvJXyT6Z5UFau16drsh3yNjV7pw1xoMGhWNz+NQ3KAy9r7K9
nQeaQYUnwiYr4XG92XPjDzxoOu6imdVRBtem3jx44cOD4r97N75NKYOYU4+7
ZC7yIMVG1/TDmTJwz7WxCj3PA68dfIeqgVKwOJQXEu3Cg/mrw+/3zHwGb72i
FYqOPDAfyZ1cIl0C5xQ/LGnexgMtlxjBFU2f4ObfsOMtJjzSL19ZuPbRJ+gI
r5HoRzzobty22kjlE8Ccew8XG/DAv6DJ0Xb1RxhqmmofW8uDC3MmQpfeKYY9
66v6XRV5YDoGL9bNKwYjfcnvwvI8WNgT9HHzww/weEyC8UqGB5mVimN2CUXw
fGFBk+QC8vn3je0j3hdAzo03guYiPMi7Kewdjwrgo9CBe+uEyPddqLmXWfoe
2E/i85YI8GCJ3dGSytp3pL/a37SIRuYDlVuac/rfgv8Rw6d3J7mgvnCP6QKP
t7Aso2pZ8TiZR+bIH14y/gZSgp/tnRnlwv2etPuG1BswXmwWEzHEhcrMb5Pn
FXPB8XLkjA6TCzHxUQv9419DLHX3/Zs+LpyMcFwdrv4aSkpFljJ6uTDHe8gx
XTsHPvlf55zr4sJFH82wLw8zIeewf5j5Py5YcgYbs1IyQFVhe9jiVnI/R/OX
ROWng3j+6t/Tf7nww9w05+ivl4B6tx2s/cOF9A9i0zv604Cj8Teo8jcXAtbX
mqybSYXqXUeEv/3iwgaFww0zi16AyvFyJruJC2Khyxa3r0kBAzGmlQRxO415
osI4GdLuXhfUaSTP13txItIpCZRl7A7ENXDhtL0xw/dcIpwfKh1qr+cCo0bg
zhH/BOj4MvJnHXGLu5qu/Y44KM8tj+2q5ULowewyDeensP7OTVdLYiO02XYs
+DFo71x9D9dwgale2fcxIxaet1TwDYkfSR70DauOhqj+w0W4mgvm4x0S/w09
hMOTw+WWxJN/PZ6tkIqEz3FBS7u/c+FFKW/dqE4EaL5U/XKL2Cbj7kdsEw5q
OiXFWsRimutSFIdC4GXVWarzG7n/qR1fcnXuQH/w4sh44rKKo6xdlwIhS/fX
+ZPEajFX5nUX+oHStrgEXWKqevUJPt8X7AU8FksSf3B1eqV1ywusH1v0DHzl
wpC8RkepojPYLNKe/U1ck67car3PBrpC1U5UEwscsVAJ2mqMLg8tUfhGnLY2
8aJEwVGkabZCqYE49tLTsfofHuhM2KazncR/f53JSrC8hAZKbET5xKqGemfc
y68jw+ZrYyrk+zdY+t1Xjr+JLhfmrNtN/OPaKbdA+9toneZAvj/xxazdFiz5
YLSwXC/sI7Hivw0a+3+Eofyx269FyXocFgml/u64j65Uti37jzhLhXZu/ooH
yG7EpOsNMW3T+datgg/Rh6dpIwpkva2sundf7IhC4XZSe28TJ56xK3r5MQYd
mroyzSM2fYRiF1x7grReGG8SJvv78PVr4W32z1Dp4eBvscTnuxYaGi2OR3un
cJZuHRc+8wLT3GcS0Ns72OEOiRfWHXC605+ILvzwXLmFxJeM7JRc0q8kdHNb
iwn1g+TLWpdbjfnJSKA85nA8icewguTNgykpyEH3g9NVEq/521tHRaNeIBZ9
W/axn1wQcdx3bLNXGpreJrRxF4n/l/f0Gc+1MtCBmxqtIS1kPz7HFQnrZKKV
936UfSP55DgptOnsxiyUNC8oTqGNC3ez++UV4rIRPeuxal0HF4wV3i/4l/wa
yTZ8P1ZG8vdsLqv6/opclH1tTcXh/+X3bpWwrWm5qPP4dwWKzYVhv9tiL9Lz
kFzhIv8zg1xI6T8wxy33LWrdU763cIIL9QF3Pi7RzUcmEadEX02R9V7y4Xrt
23wUfu5gavIMFw7tX8bVKXiHPMzPRxbOcmFe0fDoDC5AEx98ac6knl0Kvdd9
53sxsrZ+m1+txIPkFSXPDfcCmp+WsMhVmQd1H8ePsmsBeaWKWMgs5YHsTKZ7
qjNGEcdvTgWq88BjnSxL3O0j2ljC2tm7ngfLYzo767xKUPimM5CxkwdGJ/gl
r96UIDnz6zrju3mwT1s+KWC8BJnqheqbW/HgxleLI3qXPqNpzsdfkrY8+E3L
/RvrW4o0cqNYcid5EHbGr9HJvxxJ5tYvXRTAg6Aq+pvO4nL0ooluVn6b1N81
/g9Oz5SjlAPfzHyDeXBxyH+vh1cFKtOET7wIHjhdDqi8fvILandV7jibyCN1
43bxs51VqNkx6Xz3J3K+pYamNC+sRn+2ud9XEOPDdzHJQKc91aisteRHjSQf
KlzCjnUGV6Nm559/7knx4XCM2XxvqgZ5R8zwly3mw377Hd+u+tagD9eFrF9q
8cGo09ws1LUWrVBWMpMl5/Xc0V2G6Vb1CN0q8ZbK4sP839rHLnrWo1BH1+Sl
b8j5i+WDTR7Uo9SYhe16hXxQDOn8/bOhHrGo4vXe5XzQWHbFR9C2AZlnsJq2
/eODifWr94cP/0B1H31UZKVmwTtPVH/B2SaUK5kg8fvKLPzzKtPxDviD5gzt
ffplDQ1z3u/+dLGiDb1z7V/JEqHj5aLlXr5NbajcOOrrsDgd29syVlzvbkMp
7jVnJiTpuHJcO+SWQDua+3KP17Q0HSdvkLd5yGhH1yJ3c7pVyPUZ7X2v37Uj
pUtmxfv0yfXxFxdwUjsQK+X1ChPS39EHB0uG8jtQ+Lhy8NQpOtZHzt5jZR1I
3jl0NsOZjlP+2v/hdnag0u1MmqQHHfspmiSLL+1Ekrf0M9N8yPWREptWxnai
l8x98jvvketvJzgdv9OFKkSX2gq8pWOnHNes9NguZCRTYXfzHR0r/tnEH03r
QiY/tAT4pF8NW1v3OLCyCzXmxW/sBjr2/kE1pYh3I7cnyw75faHj7WrHd/eF
dqMouiU0/yH97W6tJ+ufdSOfUvpKqRY6LvDm9l/O7EbZX0/Umf6j47WVkUFi
1d0odSC2KraTjmXPlZasmt+Dwk7mZIiy6bi7WN3ALaIHeYXaC3JJPx7fOxz0
NrEHZbfLPesg/fqhhdDEf92DJObRFMpoFP5+4uCFe/U9qM/EI85XgMJvJYKy
s6V70Wj054OppN+/dahPfSSqF329q9g6R4HCjIA3Fwxf9KJrfhnK0YoUns7w
+3wzvxe5HD7OXraIwm50xaPSP3tRx1D1Mq0lFLZJ3flUV6EPXa55fkFgOYWX
j7+SuvS4D+V064bGr6OwfKmV6quXfWjxav6PUi0Ki0VOaLW870PTV1WXdq+n
8OD6rZamP/tQ3B6fbDkdMp+4/g6aL9OPxs8l7TPWp3CW0Y3orcv60TNh+92G
myicKK6e4r2hH5Umi6zbYEDhoLRzJc1W/eiPAj9WyojC1l0i/NSwfnROpud1
FJnXzPIyJZqf9qO2t4l3nBlkvr1prTQvox89zzy7ZtMWCqssjde/UNWPLIXi
q8vIvCc1uM0s9Xc/2p7eWB64lcJCwDzwp68fqavk3EBkPmTabzy/RYSJdOYt
10gi82TLqr9+XnJM5Cv0dv7u7WSem/YPf6HORI+yfmUMEb+N+Z4xdxsTrTk+
Z1qTzKv+DSd6f/mR67FWkAOZby8kiU9I3GcijV9+Jc3Epz1zBBnxTPTilckT
GzIfW87nqaYUM5FnWYeiAZmft7Qmrv/1jYkWFeoXJhHrZO5gSPxlojtZ3Wxh
Mn8r7Ip08Jxhoss7XWeBWELJwCVZjIVcxtp+SpH5nd/X6vNTgYUqono2HSUe
ehd4R3wlCzVo/1zyirjz9qoYY30W0gheGMQhbrKpTTlnxkJfZKbdV++hcOXy
i2+e27CQ5uh4w3HiD6OLPjedYKGT/RfyoomzSz7ViV1goVs2veKlxEkRp9s2
B7BQ4orPP1nEUUckBz0esJD9j5vy8/ZS+I5WHj8pkYU2HkypWEV8ZdZublMO
C00rZXX/732L+/dZJbGPLLSTru5hTXz0abLm5hpyfxbRR52IrV0sNnm0slDK
4weF/3u/YmY4ZJbEYaEr/VmX/vf+xUAs2qaRx0LvrwRGHyVe/cvohOhcNqpo
zpGxJV6S2n7eaBEbCdQ1DpoRL7wY5O++io0+2T5S1yYW3L72fqIBG217lJIn
Szwp3RD3w5yN3nWmxYyR52F2XM4UsWMjgySbmu/ELa+XfDA8zUaLbI7ZJRJ/
0/fUVL3IRqrOV4zOERcVf44WucVGzLgjyQbE6aZyggORbBSQNH6fT9b7ceUZ
zx9JbNT0RZX2gfju3qLWwtfkfkVr2ReIfRoldyd+ZCP7sQHblcS27bkr3FvZ
KGbcIu462W+z00IPD3DYSHnmorcqsR7HljLisdEb3+FPQOJFeprXLKLEQSc3
NuX2kfiac2PvzoGVHDS5dpe1N/GwYFL+D30O8pBcfpRH4rF2wY6IRBsO4plt
Lp42pzCOfjQbdIKDLtonipwjzl7MdnH34qBlH9++ayPxHbYywswogoNk1BxM
XptR+GpWZ55qAgepz1snv5DYRXejqmg2B4Uu0trlQvJj55Zm7o9vHBT19Gj5
PJJPm8rXOhc1c5C1B1vMjuSbxm6/pkQmB72TPZT8hOSjsJ36a3fRARRUkNG0
kOTrZw+PU6LbBlBlXgGt0JjCueOfGgb2D6CydwVfGjeTenFFxqTx6ACiciL/
sEh98AsqWJR0YwBNvherFzakMBlK64yKBtCi/XPbJ/UovEb9IFKrGkDXnjR+
6tal8KL0tHTR3wNogd7q1u+kPs3kW95unBhA495in0O1Kdx8apfyO4VBtNhk
7sKyNRRueDlmvWrpIEqtiksMXE3hKvaz4Gcag+jKTZWjaBWFC84PTQZsHEQP
9lafStCgcMz1qHqrA4No7Zvnx5aoUfhA9L8gZvgg4ig419PlyHqa5c6lxw6i
2D1rlRgyFK6YCIyQTRhEwixRt4tSJL5tVz3ZkjOIPPxm19TOo7CygndWdO0g
0r1t360lQuHeR+KNWxcOoUx6cnHcBB0vtWg5ZKc4hC4L72W6jpHzYia71U11
CEV67hfRHaHjr//Z9MVqD6HppwpzMzl0nLMogTuwbwi1v9SXteiiY59nempP
Hgyhhl3GDetq6TjXUjQ15/EQqjh4ZE/Idzpm8f+sLk8aQt0ZzMS2Kjo+7Oin
N5w7hBzfP/jmXUbHW1W+mu9oGELmVWZiFoV0LJF4xGNUehiNLSkYik2i42fJ
IR92RQ0jh1TN8xVudOylsSux6ekwKs46fNrnLB2bvxK/fTR5GOnP5s8uP03H
o9l3917KG0ZFNSsWOB+hY4uioI6kumGUZuycnLyfjifrAkRnJEeQnfjtqj49
OraiXT2QdnsEyexaKRM/ScPqN40MdO6NICNb72cBozTMFeQqQ9QIuvK9K/Po
IA2nivv2NiSPoH1uS46K99IwX/ayL+3zCFrT1cWVbKLhl2suJBykjaJXEjmH
W3JpWOA/V7bg5VEUIKbXEXOahpUsbFQ2+I2i4WKdtybHaFjbEO13ujOKlj8p
re90oGEnpQXvC2JHUaTFCeaC/TT84U9egHvBKHr+56D3vM007G3PVfo1M4pC
VMZ2Rc+j4T6H4J3p18ZQg8+ah2kOs0Cz9Lr669YYqmTncCSsZkHe2CFb6N4Y
Mthvl+lkOgvbldfJHokbQ8fnfT70S3MWElvq2mTwGAp77Lh13gQf7B0VL1+n
jyPWuQadkBDSjzqlvdgXMI70atIEPr0i/a7adYOx4HGUp8zcvOIZD3S7rb9F
PxhH2ycECq+F8+DJWdpIc+I4ypZee1XgAg/Oeh80PvVxHNnLhoqc3cwDkRDB
H778cXSjbtnlpCoumOQfoZIvTaAGUydm4d8ZeDNX0WHCZRJpnBX65/hzCrpX
bY877zWJiuLO+ySXT4H8Ts+2Ad9JNKqw//Xft1Nw5Vblid67k4iBeRPLH06B
6ayP26/USUQ7aFwpYzUFdYN/rhd2TiJpWyzkWTYJnPqnidftp9BP16ke+RcT
oP5oaa/wrmnU0B1QRDHGYNo7gPdqPxftcLrTJx3HAea0kmSqPh8xRga8/Qva
IP7U7QYlNRqD1qLSGOaaDuFbvoYoLKczVC638eSrWpGk+yuTEhmKoZVICTbL
DaFi03cf3irOYYjYMxTz+TOI5+qoZyMpwLCtDT/YFjKHQReui13FE2DE+D6e
GHEVZejt8Py0kybEyFylP294+XzGdHN6r8ywEMNbvVmuNVKKYepSEb57XIgR
Sd99L++5FCN0pkM/cFqIYX/jgGdYnhRDRVHpziglzFitvtl3T4MUw+zgnZX1
UsKM5ocNMULS0ozI2hPO4brCDMtdt4TMI6UZa8uUWWKXhRncN65lyjEyjEsH
DCJNrgozONUG7/xSZRgfOw8Y+fgJM6zb5WT73skwrOeEhvTdEWZcMp4vW/pL
huHLmFld8UiYoe/osOK1kiyjoqDJNbBImPGo7UqEU7wsY+HOEZkPWJjhpTK0
XSxHlmH/S7J49LMwo/K/jFPvPsoyBia2SR7/JsyYdBXnLO2QZcjq5mWatAgz
gmaKJDXV5RhOn6ttfNqFGV9X1Syf0JNjpO1n8nO6hRnZR7enVZjJMYw8Vfcs
HRBmNG46M3bpjBzjFt14wnZEmPHu2qLigz5yjJpwu7jwCWGGvRRjxCBYjqGo
csGsYoY879amSNUncoz///0GQ+v/f7/xf3lLkQE=
       "]]},
     Annotation[#, "Charting`Private`Tag$18084#7"]& ], 
    TagBox[
     {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwt2nk01F8bAPBZsktESBtCQpEt2e4kRSVFJcqWUpQkCVmjyJI12ctS9rWU
Sri3SCK77GXfZgZjl/W9v3PefzifM5cz37nP89znuWdErO4aWpMIBMJe/OO/
39cKwqc2NliQ6+uZytIQAQrfipCE2ioL8vrHNxPjJUCpPJFm6rzEggJU09Kc
7wpQJP5+/klnsKBkXVKypoEAhco5+LqznwXFpxn0L/EJUBxuKRkXVbCgxiSj
5/wv+Sle4l3oxlMWJPeI8+VCwTZKfMLeyDouFmQcQHik28dLSeoNuGvAxozm
HlyPO7WXm8LfeP7s/m1MaPW7rHn3NzZK9bnz2rXimxCBSZjvdQOZortf3Gmv
KBmdG+3+7V64AlTzTdMbZEmIUmstkOAyDZaDbvDK7yeiR9TOVdWAP2B+8c0L
830E9KjhS6Cg5idYKRqpWH5nHSa/PKNwsrMfqjF5F0lfX4Wf9suJH1ydglGU
w4ePei5DvrtK35sK5yG5aupP7YNlqDfKU3Dv+zx0PJ35xMh+GToUCppt6pqH
Bkbbm29bLMPKi1ysJPIC5LJbsYs+ugxZu5OzzS8swIAYmEpjwj43mftybgF6
TOpwRYf+g1Hj3CKHpZfgtUTjYWrSEiw0BwrrDssw/P2oRkvMEvRQ3MVR93gZ
lv9yjv4StgSNj1x5/Cx6GQqtRek888brNXaa/PmyDBvNmrIOWCzBC07rxVVM
K1Bzzyl7h91L8ImAtvTn6BW4PVVtcT5xEe6MySoRy1uFJ0pqzv6NWoRPKi99
YStfhU7NJplVzxahHv/5R731q7CR5GoS47EIbbwETM0Yq9D/2vsvKqaLMFHM
1zNVfg3OiR145L5jERondvqef78GGzJ2sxHjF+CNEdM6k9x1aDmBiE6RC/DX
FnjFpGQdzshfWx4JWoBah/trT1evQ77yDNov9wXIGSNsxDa0Do1b5epjzRag
1DhBcVRoAw4Qjj2XE1mAAwmyErL+G3DB5OYuy8x5yCJ8+qrHfgJ6msTG35I8
D+MiZR/myBKQ4HAO14m4eehb4cTfqkRAag6MDemgeWhWSh/k0cL77v9wYPH2
PLzfd+kvuExA7EXBGWGy8zDS/d6MdSAB7eYsPASL52DP7ZvtvQMEZD8k2ROW
PwcXGqos348RUHlpir9l+hycvT1u6zNJQGZ3nncTo+egSPa7jU3LBJRY7+yn
/WAOXmrVufSOm4i2R2h0/lSYg6fcHuSkqxMRH3/to9bCWUjtSR9fCyWi65PH
pNMyZ2Gpx/2YoedE9L6q9PeD5FmoZSVErYglovMu+VIC4bNwwGbbY7tUIors
iGg1uTsLkT1TpvUHItqSYCzZe2AWhrnnjSx1EhG78EjDePYMDJ4wn8zdRUI9
iay1fakzcHbMVTVWhITytktXtcfPwHNrLAke4iR0jteh9HvQDBzZfytJ7gAJ
RTMvZ6bcmoFPC4m9x9VJSHRis6+J1Az0j7UMkzAhoTlbOc9zojOQLcGz47Up
CX0fMXTVEZqBQhof9YUsScimL8ZeiX0GJrQTfs7cIKH8FpErPNRp2FpL3Gvo
REJqJUqKP7OmYT7YMlIbQkKch41lUco0/L7r4c+ecBL6W+Qm9TFuGsbIKM+P
PCch3zwonBY4Dav3dMiMxpFQdfLJzT6207Bmb8rZmDQSuvDUbERl/zSMH5Hc
9OkLCdld8IvNzGTAH0pczayDJJSyXqIglcKAVyKFNvYMk1BbJqM+J44BByjW
wYdGcZ1Yu8JUEMSAIYst1cdoJMSXLu/4wY4BdeIfs4nPklDZYu/pb3IMeBZm
afYQyWgmZdvosf0MmPS8TzWeTEb79E77fhdhwB0sW98bMpFRRHLxp+qtDMgW
riJexEpGtZFCp1+NT0HbWGZV+S1ktFP5wfrHe1OQ8+bxWakdZOQf1Kf4xWoK
sgucKIzYSUaMv6dvl5+fgikbc+yzu8io8qloR6XSFHQI+ZeSJkxGdzob3jb9
m4RWQQnPa8TJqOOA2lgrdRKKHph3Y95HRlq+6bs7uifhr95gHg1JMuKX9gz+
WzYJ9Y67XoyXIqNyDylrms8k5DE/4bpNlowkm14kTDpOQhOq7fZ9cmQUKU5s
nr42CdVElTwUDpHRjfp2zaXjk/CDo1q4ugIZbRH2E2Rin4SoQkSJ+zAZuTkx
9FlXJmBXzWOJJeyh6it+HPQJGP36L71LhYw+3ZOf4amfgH0K9qQIVTKyrOit
3R05AZuTjWKgBhnpaCxZ//GZgJKenFdDNcno4EduQuK9CZjM73HwEiCj1eyj
itsNJqD47vb+NgoZDYpdrm+nTMD4LJf6kKNkVPPK0SZabgK+0FT/palFRrGR
rxN5uSegPuhkDTtGRt6cpcrNG3SoUvBc/6A2fh7/1sbwKTr8oqVc9ANb0Y2J
iauBDt8OKI+OHSejHXO7kn6V06H/wpsyhxNkRLJXPhKcT4eV+ju+zmA3Xr15
hzWUDvfY+ZgN65DRx25vlh+edJh7pXDtoi4ZvboYm+J3hw4LFqw7EbZfQ6Ga
thkdTv8+Nyd+kozsTv78TTpDh5veiBv6YZ+v6L/7VZ0OH0skLfzFVtVYZnsk
Q4fKOl7D8qfIiPWQtOYaBx2KLYS9/Yk9lX2s48sKDT6yuBbNeZqM2sRMHd1o
NFgi+7f1JHbZKyfOI900+Disz8EH+41gSPpiDQ0Kkg3si7CDI9MoxSU06H9/
Z1MvtiNneZdTNg02HVZ+yaxHRpf925wU4mnw+u7Ytn3YRwlTXDOBNGjqrOVz
DFvSjSWr8CENFgqqp5hgc8/tOXbXlgYT70Wq3sJevKPy54AJDc4Emhg8wP47
es6FrkuDN7hzx92wv1+15clRocEfVjks7ti53T45tpI0aB/jXfDf+ucX449L
CtJgqP+l4f/+n1vDu94RFho0arHJu4x99WTtw7RFKvSan+I4jq1bMch7fZQK
TbTkmKSwZTVW80TbqdB84f5LNmz+j3y6/VVUuFOTs3MQP++a3IGBpGIq7AIG
pZ+wh7KPe5inU2GQWOrpAOxaMXP+XdFUqCdiHWyI/e6Vc2G3HxXaP2J5JIAd
Jxh2Kv4BFZZnrx1ox/vxKDJjyNiaCqvlKuIisG9yIi+Bi1Q40NL14wS2vn+H
YJs2Fd4Kqy9dwPurRJh+F6VIhW0psp4p2Dvd2M6cF6PCvhfRm3WwqXdUfRrJ
VMhEXCv0xfHTNGq4I2x2HPKbGtYJYn+6evvDmcFxmO1o8isLx5//xcTxmm/j
cG+Em18pjk9RjXWD7z7jMOZQ0q00HN+NPBoycY7j0LDFim0XtteIO/Oda/jv
ZxYvhOP86Ar7V8J3fByWl9WSbuH8eT4wt/c66zj8/btDmorzT+ujwvrhf2OQ
+1P5a4DNCHbs4KCOwXPLbuPhOF/1lBjPimrHIM+Z21MSOJ83BdDmSWFj8Enr
ITMRnO/vTKUa27zH4Dp/xpeLR3D+H7LNznYYg/Eu7uz+uD6Udo2YGxqOwQzv
laAuZTJ6cGDgR8q2MfjMvC7qPK43I80dcZTEUfh3h8SvQGkyisoQcOILGYXN
n24beON6puVhpD/mOQpJmzu47+3H+SfeSgq3GIUFO1wNTuJ6eMm14Xav6Ci8
fiLYqg73idW7qjS8skbgu8cn90huJ6Msm6L+L8XDMP4eUU0P1/NWq6Q9p9OH
4VluJFeE6z3BLNis68UwNEu39eQnkJGRwbXOJadhmLzVRKV5lYRIqrxNSgrD
UCa/gLBngYQuc9xHBQVDMCrhmwnfGAmx58snvc4chDLzZYQ3P0no1uxb0+D4
fjhsO64s6kdCccrTajeD+qEL66XBUV98vj2U23HMrR9qN5oy5z4iIXFCQeey
ST8M/cDSIutBQn2cuUa3tvfDqi+V7hL3SeiiRPq5k7F98Mu6NWrH56/PO8VA
Lple2PP9uWuAGgkd9GIyYd7bDfc6bHUXYhCRUEljzNimbsi3niVOnyAipoWE
tpqRLqju8s62nEZEPXfkL4Rld8Hv5/m7ro8SUZCZxVlB+S6Y5kPeU/KXiEbV
Px+XOtoJzS8aaTyrI6LkFTt5fYt2SPD/FLSWQ0TPDqvckzvaDi9kXPKcyiIi
l/vkwq172yFz8IeegQwi0qfFHWgfaYOjuxn/6l4T0VpXlaSlfRt8WchiVJxA
RJdLhPc4ev6GnLlKha3BRMT7sJUjOqEFtisWPLW/Q0RLG/94ptxa4M+TS7H3
bhPRX/89grqXW6CD9b69LrZElBl1S2xZsAW6Xqr/HGhNRJqFBA3z6GYoKuoV
UWdGRLajMvYSEU1Qjzvpc6s+fj/2hk7eDk2wq3dlkXiGiBTnXdw6zjZBZ2Z3
JvnTRLROqvAP4mqCItLzyfE6RBS12yRpMrgRZgH7K6EUIvLKYU+5s7kBVowF
FpAViOjk54t5e37Vw0GjvgWLQ7jf+5H8uSmoHnaddTaAskSUNaDcrMRaD53r
5/WfyhBR6/Zr5HVSHYw88qROXYKIpAK+WIcu1cAhs6x3FCEiar9uJ1UwWAX7
nuwPhZuIqPzPucPF6VXw17LIUCyZiNKNlLTLbKtgEVeF/AMSETnprpvVTn2H
odEhUJlARNwy4RGjK5XwqBpH6Z8VAjo5W7S0h68CUjbCdEtnCUjOLpZpX/s3
aBRhV/p95r/+2WPrwfhvUOIns1rzNAGNtB2XURf+BonarVfmpgjIt6Tdwljm
KxS0aD9qRiegB+TFEJHAcnhBZkPl2zABac/DDNkt5VBn1LlgdYiAto4GfNV4
UQbbvgmoqWLn1wjNm6SUwr5LL5+X4/56JELTNPJzCWy5LnSR3ktA7x+zOCeD
Etidfu0RwPZ90BiW//0z5K4eq3jxl4D2mFhV1DR9gk/HuqJO/yEgY2F/KTK1
GNoemrbu6SIgia1ntXkciqGUeM1lXew5sqD5noUPUDdp2PZjJwFFjGZFqJE+
QJag9PZXHQRUk1+3dF+oCJbYrM9HthFQbHL0Vt/kd1AvoPCrAPaNSAuZcIl3
MIgwkJn0m4DIztMWufJvYcYb+ZpPrQTk4iYV+vNFPlRu33eFu4WA9CcZbQXp
eZB38yF6QTN+P1Yf90R/zIWZNAc3Q+zfJ7XfWnVmw+2RP0OTmwgot4x9WZea
BQV+/uPTw35yqElLdiUTbs0Pi11uJCCF7eatKzszYH76llhLbPYQsV0DB9Ih
0wYrnyD2AIFmXa2ZBje99Q9pbsDPN+ayGGX5GnLOiT08h21jqklxv5cKhSv0
abzYlMZNgVd9U6Ca35YrXfUE9PfuXiVT3SS4R8NKwQE75FJhleStl7BA818C
wFYHGsbzwQlw87VDpK3YNIma8a95cbDlGOeN0ToCiue65B7aEAOfyQb/gNgn
FwY5r0y/gDYKBRIJ2Et/HF7t442Ct8UePn6InfF9TXZOMRJWZoz/uYxtlBf0
FRmFw3BVojLAZpeSTReafgYXVVCwBLbNP92fRYqB0G1Iopcbu6raiq7n6geR
rZLc+i8C2hvrsWXkiw90H6Z5TWKTGmSs19fdYZvNqdp+7LI7ljly/k5wy9q5
bR3Y04KSg9+FbkGL9A3TJuzG3N29FwyNoN4No9Q67E1XTwsHHNMEkhoXh39h
Zx1MdeEssQJrUqviDdhxri/nW347gHTZ09dbsf902hak6LuC66e0knuwRdWU
be/+8AYhrv2do9gK+j4Ru5Mfg8IiSZ4F7N9eN+39TJ+CpUmBEyz4eVwKzpym
CwaDft4C1x3YQn0Kkud/hwKV9YlMeWxz1hDSH90I4OrS2qaHXSBMuMe97zkw
O2RFuoVNOHK/9xjTCzAJo6WDsA0MRs64DEaD7Mh7hnnYqbYmpdlfY4HixLRz
C7Z2PIjj8UoED9R6P0ni/Xzx7h3LcdNXoD70ZNsl7PvDW9XUdyWD5G0XpgOx
K9f8su6upIC6HorwIjY9EFoGUlOBS/IuRXkcT9v4/wm87nwNbP3Cjjtg3zho
59/2MQ2cZhe9Oo8dWpKmwUhPB48qVW6r43j9eKJ3ji06A0QXNzr6Y7NaGF7T
cMoCkyds3Pbi+M8OU6G8kcsDnZOat3xwvmyqTCplUcwHD69eiBjDtlhiPnL7
cAHY0jOnfh7nW1AhVXB7UiE45PhERAHno+b2zzx9ae9Ag6LYrl04f28X0Rsi
9hUBeHTIOvm//D4jHHosqwhYG+nL72snoBmfp+wZue9BIJ/nRYDrQTr1Itm+
qBgsPeVFcbh+tDwJ/LpH6SPoUWcWOdKNP+89Zd5NxR+BsCVxUw/25fNiq4ol
n8CzpHl9GVyPtpTOzK2gEsDhzctYwPXLNSRsJLC+HFTwLrMojhBQ2r6KN2rn
IKhYhmYcowTU/HXBaqIJAqfC4oMj2Pwr+XczbyEQ9TUVpI8TkIMsP53D/ivw
MCxjOzdBQOKxQ0PNThWgQ2/K7+Q8zk/r9YqcDxVgIDFQzniBgAzlBV8/WagA
7zoP6d5aJKBHv05fVXatBPFTvz/H/iOgLkLRnzj378CYIOu7ex3vj61Pm6Xv
D/Cwx9riFwsRBdQSPwyV/wCsdyOur7ASke8B3+c2Kz+AoIb8uQPs+Dyf9j3n
4FQN7p90aI3jJCLLh09qvG/8BMo3u6++4CGiQ4FPy1+dqgWZjrlzfDvx+ZYZ
kt6ztQHkWR+CEvh8rGfn8rM82wDOG9ll5CsSUbVd6LWh4AaQRJY6cESZiMxj
dbidSY1gb3HjJqMjRHTeVLfO070RvJKxCM4HRKQ+dFIn5E4T2HXVd71dj4g2
z+mp5Rq0ANTXwDRjg8+7LvlrLo4tIDcigWnyFj5/kWCw1vMWoBhv7Ee3w/3P
s6GujtYWoPbVhs5wICJJMQ83JuNWgBTP5fA/JCKtCzmfzc1/g7snsk40BhKR
83s2FZ7b7UD2jLRFbS4R9TlVKTo/6QZbratyZBZxv1TNJJT5phvExRnMPP5H
RB07j290VnaD+jLrsu4VImqsrPipwdQDskWulD8jkBDi+2rO5N8DfKUqnGfZ
SCjp/ZeAqKd/QAh73uZfO0nIfK6w511QL3DtiY2+rUVCk5/PfHOp7geS7TP7
HIJxP8j2w8m9vR+cV9jE8AghIVNjyj7vkX6wum0OBISRUM2C/DP/TQPA7Fr9
lfjnJJSmIGj0gjIAWk8tfMtJwOvzBsbffRoAAbxylz1z8PpkF57JzEFwzrCa
OQ/3p0QGo2L64yCoWcj+6llLQirglvN81SCYasuR06sjofQ/pt2rQ4Pg4J1V
noFG3G8KaaVxiAyBqpFmhel2vD6K88j+uCGQxL0YEzOM1z9NsbweOAzCp3dq
d6+TkOXbOwW5ccMgXkEUOuN+Wqj7yPpc1jDYbHQ7k4tERqEHmxP8aoZBGbE7
S4GJjJx/k9rTOUYA+pecbsBBRif2Xj8zHjICJAiZse38uD8/I5d46NUIiFd5
XKksSEYlzqvUh/kjoEJvYSYC9/cHa6IC2BtGgJjitIb6TjwP3vteIc09Coyf
nuiyEMHzRbmEqn3kKFh6/u3zHzxPJI/NBBSnjoJJ2zu7l/G8cXkrbF9/Nwqo
hwdEtx4go3rrSw/CWkbBrGzGrKIsGRVzBhQW8o0BlWI6z3E8rzgoX9hYEhsD
B2eWmjQUyUjKUlj/qNIYmJXJJMsr4fmk6BOt6eIYUD7omcZ5GM9vl8clZqPH
wHLLe50gPC9Rnnx4oJYxBiLPG/wzUyOj5Tyfyscfx8DflCcMGXUysicKWfF1
jAFx5xPxpXjeMso89VJp+zjg2bxbJ5WC5/Fmfrrn/nFwy313xNn/7kdWBlSr
jowDy+4PC4vYmmfdO4wuj4O0r0cJqnj+E1/I4XVNGAflMW+9fY+TkeB3A9Gc
7HEQfV3XfAObPWpR7u/ncVAyzGhzwfMl49Axfe2OcdCTm+Z/Bc+fg4RxU5fR
cZBR2f6hCrutIfR29sI4qNp38+4BPK+W3ukK4N5GBV75ko4T2AXqj2KOiVFB
n3d+0Qk876ZySKQ7K1DBKZqKQwL2i67a91laVKA7vvGahh2Qda+ix4AKajYf
PX0Yz9PurgLNW65SwS8fYOWFba9T1qflQAXvVo8NI+wLw6zrmaFUsM3/pbAK
ntd13udz9rykgq0RSU122KqPL+zYkkcFX0OJfYnYBwyX92uVUsFI4j7damxh
kWSVB7VUYExxZ57C5mUc18nsogJn89sCPHpkxAxpF7vHqeCNsp3LQeylkIjr
XP+owP/KoqgONs308P2jrDTgmhvMf+W/+w/pPz5OAjTQq5+n/999RuOyb3iG
BA0EZwz/cMKu+CmZ1KVEA1svVHj9dz9SHFuft/k4DSiKdd39734k66ZTKeUC
DQjxVsS4YCcqC9Xev0YD3yg7Z+2xw5hQZ7ojDRjRAryuYvu2Wo91+tDAU5u3
ymexH7zmWOSMoIHG3ccEVbBtHN8yUZJpYMKLsWcn9pWjl/juF9CA6JrDqRX8
vPrca6Lp5TQQyu4T9Rv7aG/qoc46GnjFNbCcja2Yr0vh/EMDZywvu7ljS3hO
6gM6DcSCD1t0sLfrRZk5rtBAXf23j5uxOXeo2qWx08Eyh/HdBrw/6+O9bh3b
6YBSo6/wDHv6k18gx346UMzxI2hjDz2VjtVUoQNzwb6W/+5L2o2a0u/p0MFz
9RPZb7BrxF0+vDGiA/21N4/OYBdWfGtmf0AHxTYCIuE4vl5H2vRrPKEDqu7O
4f3Y0Ve5GA7P6aBk72piOY5Pjw2Tze1v6SBh42pPB47nu/UbO9i/0oEk87qZ
ObbVyzQpjUY6OMyU8uMvjn8dtWmd15N0YJNmotOojeOHPcaobY0ONPSyLh3F
lulUt2bbPAHkqfe183A+bXUJ8L0rPQGksnZnPtDC+/9uT5mazQRgCGmerAZk
VKfiKCXqMgFkCHwvebFLyytjWP0nwCMxY5qJJhkl1Ng6/n49AX6WLtm143w3
Hijad7d3Avhu5il/cQS/HxvmFxcnJ8Ap96JXn1TISHnSmKS+NgFmbb5Zt+F6
wre81sO6YxIIKtm9JCmTUROPbmSq0SS41JZ1d5c8GaGY+I0A60nQ7nCOInAI
f367JuzuOk2C65vPDnHI4fq7P1JHPXISKOzhejmM692poz2rv+smQaKMXcTl
/WRU6eBwk+34FBC8kxemu4eMiha+tU6dnwKuCmX+k7twPnts02qzmgJWJbEH
wnC99Qko2fn60RQ49fuYL8L1WDN5U7N66RSQzOTZPMhLRj039XZ/2s4AgQ83
esVZyKg1e/6CtAgDqFRp/HmA63/txKvgV5IM4LE6Y4vIuL7fn156cpgByNz8
Usfx+RHrHd1icJEBDB9Kc2/+R0IXY/oCaOEMEFmh1ho1TkKhOkWbiXEMEBe1
w8ZylISqF/0i+VMY4MX1oHvi+HxSNZZOPPqWAcacpHsS+kho93bngpgmBsjw
H2g+gs+zsXiOtmNbp8Gk5ux1lQoSEjn997KJ0DTwdiw7E49I6PJKYa+9KH79
OGvQfBkJ/bpiNB4nPw1Su7fOx3wiobc7U1anDKfBL10js2d5JOT2Snlv4vNp
EG70q+JQNAkV6bNlvk2YBkNn3/3bh89r+nq3zI/X06CqwPC6QDjuByx8lGeK
psHzm+6N/YEkdEz410nd1mmww2hns5gnCXGmXnWY45sBIltuTF+1IqFXac/K
9KJnQKcq23DuPhJyktRLbX85A3pUi93YxEjoZA7HU6u0GTB2SmPJQpiE5gqD
zrm+nwFSTIT0ZUESOl0aMPi6eQacD/yRPYL7k6XmJ2wrXLNg8chTw1gqERkQ
PC9mPZ0Fg8XqapcziEjisbqqYtgs8LCsiJxOJaJVptXdMHoWnMp7nO/7iogy
OdzHWtNmgbNe2sHIF0S0zv/QnVA5C7522CrdeExE2QcepFwizIF9No98+s2I
aNOVOxNMD+cA88Jh791cRLTjtJGwgs8csFctsvPA/ai8GjhvGTgHmt5/H2wm
4f5zB8/nkrg5wC9rccsW97tl3e+f3C2ZA0IsT7+o9xGQs+nqjs6VOeB/euax
eyEBjZsFn8r1mgdyjtIFhqdxP6/v5NnpPw84ngT+htoEJKhpVsgcNg+aonus
xTUJ6MRuWf6rSfPA9cov1CmH56m/zf3b0DwoesOkM7qNgEwthB56ExdAprBh
2v6yDVhvmZVh+GQB+Hu8lLJpXYe+e71V54MXQOvDCVuTqnWoNHKhLub5AvBy
RhSNT+sw8TZhtid1AdCfbSnsSViHt50vad78ugBil57dd7Nah6zPmH67ry+A
VRVmP7mJNaj18SopzXURiO3L6PRaWoUfNguZLdotgfAXFvtsR5bhiPSJpPtO
S0BdgUPn7O9lKHjKsX/KfQmIMY4fk6xchh7+NdZjQUsAfearf5eyDLU33Ow7
M5dAMo3ML2W6DJsZ3d5fhpaAA2z4nFz/D062vEz1Nv0HVE787MjMWoIS8SJj
LHrLIHFB6fXK4QW47PxkLef8KhDr0jWRUGBA2vIOrkyVdXAu5lufwNVBmHzz
aeuOvQQKQTuNZuJcAsOP/nq2XZxI6YugoeCpHsB1N0erYhuJwuCfiyy9zQDl
2p/KioXIFGGP3u5Z0xWwdsdC2YhrE0W7h8P+HIVMIbI0x0mvbaI86hAMURBn
oyjrOn47RWCmROv9MHEgc1OWe3LHts0wU2wuM5+auc9L0barDj+zwExZ90/z
qn/MSwlZGVTxW2amqLRL7Cx4zksRFtoROEdioYyxjUR4FvFSdC4F7m/hZaGo
9DBszs7yUqKarG+FK7FQ+txXflbd56McrNpNZ3/IQkm8LuG5yXUbxfWiapSW
Jwvl4EnnjjsB2yhfhy6qu/mwUPjyDF52x26jXCCHPBsPZKFE8cFrlZ+3Udwp
KzLV8SwUL1fCUM3KNkp1Sfsdv1IWypvle8U5j/gpW0/NbitDLJSh5brcKxH8
FNNOrvK5ShZKpf6mzdyp/JSpxeNc1+tYKKwSvBz+FfwUfqX3+Vp/WSiTqmA9
nVmAYlnZYOQ2wELJjZs95iYgQMk6T1t/O8JCeW+cOWsgKUBRdxQ9KzLFQmks
EY/gOiVA8SdqLhrP4ucrXvSavSxAaQw3SQpfZKEQvve09dwWoAgJP9CpXmGh
CAZ2xtZ4CFD+//0QivP/vx/yPwTuMvY=
       "]]},
     Annotation[#, "Charting`Private`Tag$18084#8"]& ], 
    TagBox[
     {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
ambO8UXi+mNpeq593n0A6tmPJIq5kYh6QKhJWXEAXowa92XD9ewkzzX05k0/
XFgdsM4A18P77DbLGi/64Qk9bwd7XC9zVwzV68P6If9oJJvPBfz9p6WLhp37
oVJvq1qGPY6nzuY323f2w4Z78yE9uP5y5yi8SE7vg/qxtvk/cf1WTt/4WyGm
Dy6/7JX9dhzHWxL3uk+BfbDbtNkK4npfEN0b3XOhDyo88Rd+jvvB2TuRYRtk
+uCt6dh8jaMkKjk6efvpy174o2Bdp5Q+jr+pt9ahcX/gw6sDsY8Vcb1SmVBz
CPkD5Rfzv5or4Pt9Q36dtvcfeNLIPEtwL4lkKG/aF078ge6CWSkPcH/r4c2y
vCz+B1pzAjm37SQ6Jpt69FBMD2Syiu5x4f7pm6cUzLezG7at2ngxlgvHow/7
iVWbf8E1DdvJfNzfJUoanzLJX7Dqu8kFp04Csc8++1FD74AjvJuEZH8RqNNZ
weJRZgck39XYxP0kUMhpmyNiCh3wmdxdg8AWAjHUi3XlNNth/vVwa8+vBEpc
dFI4bNMG7f+dNah+T6AH+1Svymu2wapNsm8evyOQ1zUiV3BzG1RJXRy0ySfQ
4aHYXW30HzDbQm5iIZdA/zqqttle+QH/3O5KVMsi0MkSKUm329/h/bJjpYNJ
BBK60coT/awFLk5eiRaNIND8yt81Y94tUOJAruEInne6AiTFDE62QKLW3rMy
jEDpTy5vWRBrgRfvrNfyekAgjVzKwTPRzZB68BvXWCCBLjF2XpGNaIJbT2fK
yd3B13PFzP2OaxNk5rztFvMhkNKMl/fPI03Q64q/BtdtAi1TKwJC+JrgoaK7
5Biev55sPPFiNLQR/pOYX6z3JJDPa+6Xzqsb4MXSi5W9Vwh0qPhYtmRdPaxI
p+iPOOP56UticVNIPfxTwB3314lAGb0qzcqc9XDv8fhiUUcCtYqfI5ap32Dn
V++1lx0IJBf04XzYfA3cNf2x9aItgdrsneTe9FVBel/bhnZzApX/PrqvILUK
Vlbp8e/CTrVU1im7VAVvB14q9zMjkLvB8unasc+wPPizlaIp3rt2hkcwFivh
LtHAiIzD+Pqm8uclhSugiNbsi8FDBJJ3imHf2vYJUn1OfTiJLTZwS3B33Cfo
/0U0oc6AQPQfujvVpT5BH4MzH97r4/mzpM3GaudHaBTz0fa5LoE8iLmHm4LL
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
//+/yf8AkoZBkg==
       "]]},
     Annotation[#, "Charting`Private`Tag$18084#9"]& ], 
    TagBox[
     {RGBColor[0.571589, 0.586483, 0.], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwt2nc81d8fB3Cu+3F9KdmrkhGphIZR6HwyolKaGoioRFay06DsEpGiYZQR
hVBGco4tyt7KvK6dPTJ/x+Px++fex/PhPu79nPs55/1+vzyuuJnd6WsUJiam
nfhh7dk8NXhsdZWGOiRvX/10UJDkWxSRVl2ioWkJmSfu8oJk8eE4I+d5GqoZ
slc+JiZISnfk/BgZpyGhsniuOWZBcmhd77vWbhoKdmdudC0RIO2tFC9kFNFQ
tNnZ6K3HBch7Um3oui8Nhbd/Etxswk9GvpJ89ouThjJ13u8KfsJLRnX62Z36
jxUtsVd9t365gRSoOaO/nZ9AHqUezV85/iPLT57RqpSiIr/iAt8SThZSd7uU
o6QECzp5azZcR3ABHEgxiq+WpyD7pge5RYFjYCHgOu+e7cyIfOn+NuhIE5iZ
e//88jYmhGY1mrYnVsJiiWf78m1WIDlRxVtAYUBV4n7GzqtL8Gpj8sA+MAnD
SGXlQ3cXYLaWsOuy+DxkKR37U+m0AB//yr1xQ3keOhxLfGRguwCRok54qd48
PGUgXHfTZAFmznN9NHKZh5zWi9bhhxagGrtSx1jlPPR7AWOHiQWo8Pf7wQyH
f9Djrw5neBB+Hm068OXrAjR/faFvKGoeytj36tOFlmFwZr96/Yt5KLvlMMyQ
XYb5P53Dvz2dh3yPo+86kstQZDlM5/H9efjSrW30h8UyrDGu/bDLZB4amWyt
LP6yDA9uOWprLzoPi4WbZxZPrEDhWNW5mddzMCxo6xUP51VYnSD6H3PkLDz3
kadR8BcTMh1FzI7PZmHsplzJ+AYmNLnHfIERMAtnlko15H4zIb78hOGfd2Yh
IzN7ZucwE7rQoFD10ngWMhf/0v3Dxox6mDRDFcRnYcKPbichTWY0e9Fis2ni
DBSMnMyaS2dGvlH/CdRHz8BAG+fRghxmJNSXzHk4Yga2HSnk8UHMSNV+fHVn
wAzcuzSqsPSLGT3wceuZuzkDzWfutUYNMCP2jMCEp/IzkKLCVl2yiYJE16Xt
hl+nYdoZnl1hDyjIli7z+2nKNBTj1+ER86Wg/LwYH9P4aZia4keJe0JBxjah
7czh09BwixN7ZCQFva5y9tZymoaj7Cp0hUwKEg5Rb/2xdxrGxxnK8DIoiE+g
8kFD2hS86i6f/EWLBV39q7kzLnEKWrlulbh+lAVlluY1OkVPQYdx/bYNJ1nQ
GZeUHYLBU/D9Yjy/viELetYS0nDRbgoGtV0d8bjFgja8uiDTuWsKbut8W/ji
NQtiF2NUDyZNQkuO823Noyzo92u2yq7YSfhCJc/7zSQL+iS8s7Q5chLmPdL6
azSH9zmvfV5JwCTc2vF3pZyJisJZFxJjrCbh5tCnFwx4qUhidL3XxR2T0Nat
vVhHmYpUcxX3/fgwAY/OR1SHuVPROuUL8ihmAsZxJhwJv0dFHRnuO7IiJiBo
CSwL8aIir09QLM5/Aqrcd2hxDqCi8ugj6z0tJ6CWk/OzfxFUdNbXmKGyHVvB
5mlvFhVZn/V+mZg4DuuNukMMx6goZiV3746YcejP3cFhNUlFTYnjVckR43Bc
afbl7RkqIpcNidSAcegd6j/jskhFfPF7HL5Yj8M7I4fmtWkE+j7XeaxQYRy+
+Zks+28zgSZj+Ps1t4/DY08zR3PECLRN75hXifg4vDt6pN9JkkAh0V+zy3nG
obxb/ZNOGQJVPhM59nZwDC5yso267SXQJiWnlaxbY9B1YqPELx0C+QR07ftm
NgbLlQ8+1zhKoPGOYzfzz+DXM9ZbZugRqNhXoqVYcQwmfhJV9z1FIJvW6s+1
//5C9pmHXXOXCJTvsePasOdfaBcbZblqTSDTos5K0WejsEabLM19QiAd9flr
fzxHoZIdy5OKpwSSy+Jien1rFOYec9VrDCHQUtKhfcKnRiGv0uvi9ucEevns
3WterlFIdmdRP70hUM0VCxu2oBHIYbRn+9WPBMpqv08ruzsCffSWj0ilEOjt
uZcx3jYj0OLhWEx3KoGsj/xopBwfgTXzrjS9DAKx7d55cJljBL70ObtxIIdA
h5jGOCf9h6H8tD9xqJRAMu60D2luw7C9Zd4nq4xAXNNbNO0sh6FupILX9h8E
6ug/6TKiOwzzNivOrVYSyL06vZNBG4bBwbznXGoJlP7WOa3dewhafS7MCW0n
UITQ06ORTkNQa+/2vqLfBHrwLIF+4doQpBwSrx37Q6ATPi1CTVpD0MOYtnyg
i0BDNgc8a1iGYH+JgVQUnUAS6iunSjwHYdbd2xWxI3j93OqyEQ6D0OzNlxue
owS6x7jDamM+CCXkH4UZ/SVQ29N/uXzag9DjjNV7tnEChfZMS15lG4TyIU68
KlME0sjau6L8bwDKFog/XsQeD3Ro4RgagHwKI5+/TRNIT3H8cUblAKy/0sa3
Z5ZAVL/hGcrTAeg+8DFxbh6vz2hHTdP9Aai2r3wh+h++v7stk5LsB6AtOCyi
s0CgvDbG5dOn8fvzoFr/RQI57eopi+EfgAo9oc8Hlwm0lSIe68Q6AAOjX5W4
rRCorsnE48hcP7yaON3Luor3w4M/ChMt/dBMTmNJkIkVMepaIsjX/XB3gSWX
AIUVhSUIOvI96Ycu1WwyQdgaHgYnBu72Q7F7vvosLKzorVQDJdikH6q0CHbS
sc+7Vt/slOiH0bOpLt4EK2I9znk4g7cfdm208GZgZ4ofF/Ol9kMFSbESLVZW
xFVZ0SDHYMAKlrrheezyzaXq9z4wYFjqQX2SjRU5T1KFTkcy4IlXq9cCsbeW
aU5KBTKgxYpVbT32A/uC+F/WDPhAIDfLCPdpOW0mzxhjBqT8vKz6Bvu3MDB0
OsGAOwblpdqxVYryNmxWYMCHMSNq+ux4vS8WB8fFGLCLP+G2N3aY9YHiYm4G
fPdsp0QO9jh/tqv1VB+8LqoxL8SB1zs0e5qk90GJ0lQZbWw9qLiLr7EPHnn+
tscW+8ONjO5vX/vgJGcZ9Rt2g1nUlmPxfXC30cKBLmwm40Djtud9sGODeixl
HSvaed7llaV3Hyy+rU5KYBucMm+dd+yDTYHJIgDb85i+oN/VPqhB2698Efuj
tuo5wbN9kH13xCt77GawLTResw9+7npw3BubcoC3VnFvH0y3ij/9AnvXvlXO
Eok++Cy4IC0e+4LcsN5Znj7IcyvQJgP7oUxzQC9zH/znkh/0HTtFoqjcYYIO
248LiJRgt25KZaV002FMmT5/BTZV8JVWSA0dVjTK+PzEluf29RJDdFhz29Rh
zZc4bqPUVDpcCf/a+QPbmzBZORhFhw6bR+qLsdNWj6pVBdFhRl7h2bXPa/+n
5G58jw4Nxpcs1q6HdVoie8SGDvcNGPMmYO/+yzl7x5gOy50/GL3ENhpY2Mtx
nA5lV98d8cX27WHcilSjwzEznq7b2Om/61K3y9Lh77EcqcvYf5ryR7M30mHY
cVOxw9hstUk7dTnocNCqsnEn9t7KcMvmhV546GbBsQ3Yl0u8Eq4P9cLAUDa/
cXy//KFt30xrLzRVtgiuxs7MuSTp/aMX5sa9s/qIzZ6yJ+pdYi88GVqVbIKt
mCj6Z8/LXig3rCuqhG0ay76x0LcXvn2R7caO/TW8J7zrOn7/wkDKJ7y/uoOr
GuwMemEV3UX1Dva6wFyeVe1e+MfdylEH2+z+s6DNUr3Qft56uRXv3ydu935+
5OuFgj9WL0RjZ9+2Ylej9kKnr28rr2Jz3tDwudTbA3U7FtcN4PORe3Ly7ouY
Hlha+jO6hcaK+o52fJMO6YHMwabngrG5tCv+fXnQA59HN5w4jH19f6xTg0kP
HPy+Y9snfB55JE7bcIv2wDaicJ0FPr9WU5+NAiO7Ycyp7W+DcT2IUJpQtQjo
hs2i57l3Y5e7KWzUdO+GuUfUFWqYWZEUU2rrwsVu6H5zjw87dte6jwZWwt2Q
U5tPyh7Xn3PS8SePvOyCPJJhX1mWCOSZvs+fU7YTth9TjbHD9bFDJUOnlKMT
ri90dBzD9VMN7ma9N9wBr2qqhdliz1bKPRxN6oAr3UY/rSZx/+mTuftzewc0
GaTGGuJ6fEFo862AbX/gqvuOQQlcz+XuERdZJdthv45N0/VeAonk1rwYoLZD
o7YWt54eAhGzr5oqGG2wqOLigjH2b5s9Z58mtcHbFRejznYTKMDYRF9oTxt8
s3K0luwkUL9ajvaOQ63QJYbdSxD3n+hF6z0nTJqh6IMgvbo6Aj1WVrmlcKgZ
Hv6Qdkof2+U2SxqPZDMcd8gN+on714nhiF3NjCZYe+5oblkNgZbbSmVMbZtg
ZdB1kYIqAl3KFdvicLcRkmQwpbCCQLxuDRzhr+rhHH/QcY4iAs2v/uMec6+H
tXWSvv6F+Pvy2SKke6ke6r9IOMmGnRhmtXVBqB46mjK9phUQ6GAak/rl8Dqo
WNV1fD0kkGW/rK10SC38s/FMvdI3fD22px3v29dCvdOTC/m5BNo34+Leol8L
meSWanSwVyhFPgGctTBhpCPIEPfzMNGLUX8Da6Cq8vZ7gVm4Pyazx9isr4Y9
WmpOnJkEOpJz7tOWn1VwjE9mfyyeB/jKonNqA6rgMRXHQiXsDz1KdYpsVVB/
bH67WTqBGoTNWVYov6CcY6t1YRqBdvh9uxY0XwElfZ+nfPhEoOar1jtSe0sh
nc/knHAinn/+nFT+Gl8K5avU2H8lECjeQFHru2Up/FvR7eWJ7ai7Ylw5VgI5
OhULRuLxfCEbHNK/WAzT27Tu/ozD1zeVMb+FrwhGeyppfn5HIAXrl8S25kIo
tMn+yi1soT4PHrnIQigv8Vd3DzajSVtWTawQfpPOdfwaSyCv3GaTC7IF0JhX
6nB5DO6/LHNPxP3zITgysMwdTSCtGZggvyEfPrUnKzqiCMTT71eg/vw7bFOf
MfuInVIhMnMxJg9Kdi38O4LNCDlo9CwnF56K/lkQ9JZAmQ9pztEgF9J/3py+
gu3lVPM0pSQH6rGemFbE3nLRrKiiNhsKuioadeF57YKYzw6Woa+w0bK46iC2
NI++Frf9V9jJkmMjhD3NInR5y+wXWOXo2zb5Gs+r/R9CVClfYNjWoc1J2BUp
v+Zvi2TAq3LixyWwX0aH83hFp0O1WG0jCvb1ZyaywdLpcNk1an/vKwKxOE+Y
fNzzGQq78JokYLu47wj68TwFpst+P7cf+8Tf8abU+E/Qr/veOTFsabOsLeFZ
H2HcupiNbNiNR7Q+m7UmQfYp/sXWSAJ9/M6+oDv0AZpcs+Mrxn60u1ZDfjER
2pcpTadg7xW+3LC4KQFmWwrTfLHZn2zd3LMrHgqy7T/giN3DNHyt/GActDCq
3muGHTLgMhdm+g4eNL/uTmLfMDpI3rkVC2NyLMsUsMkaqv8VrxgoITDYJo7d
YSepaKQbBXfeMDnHiv3kfFqpjNUbqF51Pu9fBK4/QP3CTOAr6CVRPTiKPSxd
MVjwKQIWtZb86cGO5Dx/J6j6Bbx0Ru1lC/aR2d51hhPPIe33HuFq7Pk/9m+3
8YZBp7QPpqXYCSXL8tP7nsGc1WjbfGyDTwEFyCAYOo0KaWZhs++QjxeZeAwH
Q7k70rBv/NP9kbHPH34jAkEydmm52YieqzeM1fe2iMeWfOmxgfHNE/50YzKI
xaZUy15bWbkDRfyX2KOwv9uYJiv4OMJdD9x8XmNPCMn0lohYwQOmLuWR2DUf
RTvPnjaAn7fP1kRgU68cE/PTPAg+/J6JWvMHuViXdblmQNLNWXHt9RGub2bq
G+0B36pLyCvsP62WqTEnXMER24WMN9gSqkqWdmX3wWLJ8uto7L0nPENEox8C
I6qX3nvsxnsWtt5GvuC7lG9hIrZL6vFjI0KBIFdy/eonbJGuvTJnGoMAZZqX
kol9me0J5Y9uCOD0fVWZi50qxnSLa1soeFH6zrAQm2n/7U5N4jloDZVNr8A+
dYpx3KU3HHwqUayux461vJiXVPASmEvD9D/YWpEggvveayB96tSvKezn6ek0
baO3wMfwIpUJ3//bfTyqapujQdOGLub12MXL3h/sFmPAyOj1k9uxR/yhqf9Q
LOjxuRajgs0v8E/wXes7sBrdma2LfV3O2qcpKw58CT+kehM7KDdOfTw+Htx8
Kx1/FzvrcOf0f+EJoMfZszkYm83ktLm64wdgHRH8JAc76akK+V7hE/Bj/DrM
h88LtTgqj7YvBZycYyLksU3mWfffVE4F/o8/fDyKHZA2JCQclQaoEZrZj7AP
Cudwd8Wlgy9JdZAFn9+bGSPVIdsywLWWkXKptfN9XCxI80MGeFar+k0Xe9LT
lz3hYyboXtQ1DMGOHzrHYpvxFehJRvvuwvWj/pF/wRbFLLBsxGgxwGba8v1+
7dcsYPhygMcT+9KZrUv7crPBi6YqsgV7Q97k9CLKBa0nwz1DcL1yffKU4V+V
D9Zfirorj+tj3Lai96onIcgwZBy3wK4rmDUbrYWA+DFAjcYWWEyxS7RCwH+/
sTQfrq/28gIjHLYFIHaP/G4arr9SL+n0OscicPLqbXmh9/h8XlspSv5SBJJS
nPUvY5/eI/Tu0WwR8Me5Lg77wc9jV5Rci4E33LqsiOt/G1PGn4g7JYDpakvX
Fdwfgiw9m0y9yoB+/Xr3Xtxf/CqZv9Dzy8DXJp2h3R9w/d3lFXpjsQyY55PC
ntguE14n7R3LgfpZx8/iSTifuT2quH/9B+g8pZF3M5lAu/19898erQRpFna5
EjgvNyQ+if/NUw0sPj++L4j7YxU7p7epfjX4x5Xn74Fdbh1kTg+sBv0PNVR7
sC+/1OFyptSACa8DwalfCHTGSPfX3Ts1ID6fSj+F+60a/YjOE5takFt9Y28m
7s/rp/VUP56qB6JKqecZuN9zte0xd3GoB0HV8nMWeB7gQ0KBGqH14PAuW5kh
bJHH9LaWhnoQv/u88jieJ2S2ergTFxqAIXmjjILzucbZ5JzLlxtB5RRvBMDz
h3PmfyrcN5vBG8PnXkQ9gbocS/c5P2oHz249W+buw/NSOSGS+L4d6KRHfn2L
3bJJe7W1uB3IUhb37mTg+lJc9EOd+A0eG3nc1OwnEOIruEz4/AZWnusu2Q8S
KCrzm1+Y7x9QeO3rw2ycty9Pp/1OD+gEwc7b5Xtn8P7SHS+gJ3UCndRkflOc
l8+9lk8QqOwE7L2Ke35jS0s0q3wnusDZ+c0LtXMEEq04xyJ+uAuA8tPqGTg/
c4qceTlQ2gUuj3Fr6uJ8vK54MoC5uQv0zAYc/IrNbvvsrkh/FyCZJ8QkcV5m
Law106N1A1Jbzucf9orlyV1pOt3AzPK45kucl//mHC90Ke8GC+u0qRE4/0r9
V+Z4p7kb3Pb9QhnFNrpAbrvP6AYK7D3FgMqKKmb3PPah9oDv8PTDbuy4vUIG
z8kesI/Fyp4fz9u/vULYIvR7QPehKD6Ttfm7jv3b68s9ILJ156UE1rW8u7zl
vUcPYPNYzNqL53WjTz2D6dk9oO3PspYqnvdDlwxffy3rAUl+nu5u2BXHGk/k
NvUA3ebXcl+xVYbKMgqme8DIPSnmnTgv2O0/dL2EpRdYbmoSMMeO98sV+sHT
Cx4yx0VEYPNu+3S3RqEX3FTa2MiM88hRZ2mFBtAL8gJWH+3FflAS1dN8oheQ
Rz2CzbH/mj/T6bTuBePX0hPzsaUyOBZ67vSCp7vefxzENqJ4f2QE9IKtp6IW
eHAeqoh24f6b2AvCuUTNTbGZx8eLJrJ6weSmZsdH2CrAynmmtBdE3qfCeGy7
oF6Zf429oN2CVC/Djv9j1L5E7wUt9K3Dfdh/ZJueME33gsKJY8Vr+ZrPQ5+k
stDBfi/94s1reVpEI45DnA7St5zddgI72/Lb+Q0KdOBm6O9pjv03ex87L6AD
h2CWCWdsKbaUPIETdFB3yPiW31r+PL/NTsSYDuT27l5Zy9eh8dHiotZ0oOYo
EhqHXTEj3CB+hw7MrTN3fsZm1g71kQqgAw1GZFEutkrYuv3bI+hAcqOVQSG2
Xa/3sGwiHZD5+Z1l2PF7Vt8oZNEBJ5uSYeVafvV0PbmvlA7OF9gUr+VrvtoJ
ikojHRw9QRVc8zGxm19U6XRgmfPyxFre9rKjW4ApOnDNr7i+lrez841FNCl9
QKDxgOFa3h5b3/zzMHcfCFUN2JaJLW188v5RsT5gzmxYlri2vo8/dp+Q7wNh
3CeVXq2tb1GDfupgH9BSX28fuLa+o3nh5473gRxtZXu3tfVFKh65aNQHChm3
91xbW99gyqLRzT7g32WZvvb92qnIpJi694FM5oJhxbX1+caYXvXvAyq7JdpE
sE0/26R+jOgD7FzNPQv4/om071+Z/tAHLjXHyrWs/f+EynpcPbcPlMowZ6dj
B8nVvfKu6ANdpnZuAdi6F94O/WrrA9vjrG3W8jfFy2q/wHAf6J9wC9qN7dxI
aY7nYIAlobpDv/D+U1itkhrbyAC2L2R+hGMPybxyVJZlgK4H8RbG2Jc99vKU
6zGA/ovDDd14/wvFr5pyGTPAwd3eL6Kw66orUy/YMMCm7VuNLmEflrx6fPAJ
A3BONdSX4vPFdFzh9e63DPAvkN/DdS1/Oy8NuaUwgKwMH9c2bLmKMD/2agZo
Gynqc8fnd2DKtPl0JwNofM7aJIYdu3mX9KsxBpAu+7u9EJ93gVslRTu5+oEa
9cfnJZy/ayJDeBzF+sFf5mLx59gBxcZX8hT6wXre9NM7sFcEZ1f0TvWD6XrF
nqO4vjDypQ/YPusHl3Mktl7F+Tx6YNLva2w/oKNBWg/O45d4YPNKej/4yfnE
ywi76tp5p6f1/eDMr/BtOri+fV3nl5bGNwBmlT5FTeL6aK90dnV+6wCQU1P+
cBZ7h6nYiUOKAwD9Pi6WgfP724zs4dpzA8CsN0vj2iKBfC4NSk+FDwCxFJOK
N/N43n70xUk1YQBQKgXTe3B9XvjkWfwwawDUXaF3SGLbMouY8bUMgEq2wqlI
XO8NEo++URQeBP/tfnzfEOd7qdlkXtdXg0A0wLZefBjns5JTEslJg2BqSMd2
/xCu32FzCh05g8BUS8r7OO4n47s1T2i1DAJtir3gTdxv8mza/Lj4h0CAcoDZ
HZz/z/axrSQGDYGEvN6Do20E0slMWff7zRDYt5xVXdFKoAMPz27c8GkIxB9j
in7fQiAx8WgVp8ohcKFi37heE57/jZRvH2IbBl22dQN2OM97NVwbaPUcBps5
L/Es4f7p9I5jbl3IMDgaZtD/qgTP7w6fCTJ6GDydOF2oXIzzEdeyRHz+MHCm
GnuY434trBdm7LA4DBrb+qICcB5PKyqsY3caAWye+Yl8qTifpG/5rnpjFMgK
dfgxhRLol4rDDgmXUWAW6KG8NQSvL7/4BZvPKNASepOi+ZRAryosHRrfjYJ6
5+Ihp0CcD3syttl1jgIv9PdIwkMC1XLrPos1+AtCFDS3qd7G8629vcV/2mNA
qK2di0+fQBmzhQ1jZ8bAvsnQq8l6eH724NdoMhsDSjc1tx88SiBPv9xN7x6M
gR6NM4vntPG8GU2tU8sbA9HTl+6cUMXzgIWeaLbwOCi4x/vdVBr36xddfsPB
48D5r5P5v3kqCtLJWM8cMQ528z4IyZ6hovI572cCMeMAvmSjOUxS0YELO18f
+jwOmjT3f68fpiJRYefUF7XjQDDvIu10BxUNRHI0afJMgJ7OnwnKhVTk/lZJ
8nXoBOBs5HcI86aijBP/JX5+NQE8mA/qv/CkopGVdtmydxNgU6r5lrC7VHTZ
xFNpMmMC3P0yGnTHiYo0xX4e0W2YACxVIRbM16hoXewV+2m+SbAdvh5laFDR
27jH3/XCJ8FFhtCl/xZYkKOMXmzzm0nAKbBv7sUMCzqSzOFrFjcJUkw2cotP
sKDptICTrpmTIM3yaabEAAs6lufX+65uEpSc0A7sbWRB83WP/lvknALa0qJs
l9JY0Cmmu+c++E6B7xXFUhuusCDph2oH9j2dAmGvotSGDFnQErEkCsOnwOu6
uTfQgAUlctwZaIibAgbcpw5c1GNBKwJud5iKpwB/p+FnHWUWlLTLKeY80zQw
9+Iy4lrHgqiGNqOE2zRwzk7m0/lMQRuPGYjt9ZwGmYlJB4eSKGiPKjhj6j8N
hIUFHvi8pyDTjdw5uRHTIOljvUbSCwr63p75yC53Ghx4Xvzq7V0KcjZa2ti6
OA1Mr4+R+3UpaNA48OjHezPAykBtaGcLM6oy/ZBw+tEs0BG/rZXTw4S8JO8f
mAmcBUoh97nF25mQIuPsrxeh+O9h4LFXPRN6fZNp6nfsLLDq4/fdU8yEbjqf
P2hRMAvE3iy4HI5jQmyPicY7K7Mg/PMuN/XrTEgj6wolznUO6AmW+xeVrsIv
60WM56zngdEXAiSFLUPGzsNRtx3nAcl/MzbKaxkKHXXoHrszDzwo/O5+9svQ
w6fi2kDAPHA93P9gn94y1Fp1t21NnAe6Tz6VzVCWYd14+/1v9HlwVqFccJPt
Evxb/yb2vtE/wNXuv/T3wCKUjhQfoOktgGI7AZp1yjxccH60nHxmCWSyJeuU
O03C4YWNnIkqK+CGr/wUc2g/jLbwbdgoyUSScev7iR8/YfChn4+FpZjJ6Ig8
9e6URsBpl6xRxE8hFZI2C9y0HQX5Wtnfv4qwkOMsn+z+K/oHlm1MlAw4qSSb
j53crXsUkplWF7FzmUraP3IPFrNhI5V0HQqPMrGSNT7CWywubCAXfn8c4J9k
JcMjlwuKxXhJLevy4OOzrKSQqMOhdAVe8slir4r3Aiu5rqZC4j3JS4qJbPSf
ptDI3+b6HM9NeUmd8/7b63lpJOeudMfkaF4yrPaaVbAijezS3fU5SZyPlCsV
HWF3o5H2X/5xT0nzk67nDoRp3KWRPSsSXdbK/GQB/ZyauyeNHBo/zz2sw0+e
ZXnyeNCfRiqN095M3+An75CLsuWRNFKvzvGSWjI/WZ7bbOOdRyMvuHI5vVUQ
IHmOTvF/RzSyI57qevmQAGnUypk/XUwjpbmCOiROC5Bjc9qcV3/RyJNCXk3Z
twVIAcXMFI0OGulxuMVBOEuANC2uNnDvoZHz+SahS2UC5IczwyufGTTyenu+
IL1FgFRzkNAXH8PrgVv10IIA6cN8cO7CFI0sblFdyuQQJGuCL0YFz9FIWeVj
XCmbBEkRMSed8kUa6Tp9yS95lyD5/9+nkPT//z7lf1qKTJg=
       "]]},
     Annotation[#, "Charting`Private`Tag$18084#10"]& ], 
    TagBox[
     {RGBColor[0.915, 0.3325, 0.2125], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
ErSy6iuvApeFaP/7fxra4//9P83/ASils8g=
       "]]},
     Annotation[#, "Charting`Private`Tag$18084#11"]& ], 
    TagBox[
     {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
voJk/f/7iv8DalA12Q==
       "]]},
     Annotation[#, "Charting`Private`Tag$18084#12"]& ], 
    TagBox[
     {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
/z39/wDKIr0d
       "]]},
     Annotation[#, "Charting`Private`Tag$18084#13"]& ], 
    TagBox[
     {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJw12Hk0VV3cB/BLuIZ7zzXe0EBkTJGhlGEfQ0WlSEpPppQGGUuh0EPmMiZz
mTJljOIh7C0yZk6mDJklmYdMvedd633/Ouuz1lnn7LXP/v32d599lvYXrBhJ
JJIBA4n0v9freaGzf/+Ska/C2fKDV+k474aguMomGd2g9tW1naHj1SdTTR6u
kdHQbNcpV1U6Lj5QUv9rjowaViYT2vfQ8Z+UkZSeH2QkZ8JYnDvEhztYKxkX
VpHREmfDA8otPtxDrBfd9CMjYZGCHtOHvHhsnGh4E0ZG0vYB6kYJ3HjCoL+9
ARsLUvYqnbRJpuL0VsPzUnzMyFggr9ZugwWv0zfUbhRjQvvfma8IDpNwHSkx
J1GRHah17dHFV67L4HiuSVqLLCOyuGM5qvJpDKwH3uSRl2JApOcsjmKtL8Hy
6puXZhIkFCpzl7YtNAyrRcIVK2y3ody1m7cuMsxDFeYnhQdubEJlg6mbTz+u
wQj86FEN93UYb9SYWCnyF16PNx77mbAGW9XOLJZcYkQt6XvZGGJX4Bk3f56j
i0xoLyX/MCxaghSfIN9frGRkNyr5PSR3Ca5xWcoCLjKqKEvytUhbgvaeSsPP
BMjI1PZFH0PkEgxwzbflkSaj+OaHPtoPlmBUibRh32kyEghT66lXWIL+7e50
/WdkxEtv/Pdr/iKUbPv5sY/MitiFx1um3i5AZvlQ3oVZVvQ9nrVxKHkBvkr4
z6h4hRXlCByo6YpdgKzxxVedt1iRPo9D2efABZg/s1oxwc6GIlnWM5KsF2Df
2JZQoBgbEpmhel2RXoDbT3aodl1hQyqlSor1mfNwyV0wNrmCDdlc9InOyJiD
HzgzXz1xZUdJ26UK0klzMCj6VUmGBzv6ljHXnBUzB2/qijc0PWVH+NZV5rzA
OTg2O93KEcyOeNPk732wmYNGA/I5l5PZUfnq4JlPcnOwcwKzlGtgR7uPPNgu
dpyFGQ8ejS/SOZBF1WDj3vAZKE/nxI+kcqBTamtW/Z4z8Ljd2+jaTA50qJiT
FO84A4c7t+sv5nKgzbcaigIGM9Cq16fSspgDRYenxPNwzkDBg2Pn9Oo5UOu1
W7aswb9gQvn2MfNfHEiDNIstBEzD1ISD7AGyFCSitm3w2XMK1kemvQl4S0Gt
XGoyMfem4O1HBlmTORTkMf6Yxfb6FPxWD9K131FQb8ifUt4TU7DBUtdvsZiC
Xgwvid5gnYKVX2JEDn6mICb/6WXGkEk46j8axTVIQePt3TF4/ATk66D153BS
UUT6TifeoAmIOk48z+OhIk23S+cm3Qn7HbyXS6ei12JfGUPNJ2D07s2plN1U
dNml5e6gyAS0GypFtpJUVLenRs0jcxx6sE1DD0BFmbcLf3wsGoM6r99Yp9yl
oq+WCUJn0sbgxL9N0N+Oikimz0x7X45BA3m+nXcdqeiSwfWeNacxaBeq2Cnu
TEWMx3nalBTG4KRaSssjLyr6h+M+yssbhXKTHh8io6mIPVc+ISVjBO71+h2U
84mKlDL29stHj8B2OQXHo5+pyCKZfdcnvxHYENgSV1FLRUWRw5FDN0dgbC5X
S/UXKrJ8Eh68R2wE2kgcH8v/RkWl+gvuUUnDMOPvP0/ZflKR9eI7k2exPyDP
+1Ph9RiGYo7Mq9wK/AHHXEH1MieG6lzldmk9+gHHK+6HCPFgSIyU17N+5Qds
eNW9encnhoYo2ZesBX5A/8IZlUkhDBmJp+nrRg/BHCmtEXs5DHkWKAZgMoOQ
V9ov//N5DA0oF56q4RiEX/7e+5FugCFVeJjFY3oA3uPN7vYzxNBK46GnM28H
4NnzC3s1LmPIZkzS/YvUADw2nyMTY4YhY/49joES/VBqgcFwyAZDhzyYr7CI
9sGnVxgd2v0wJFjaGjXJ1AcZ028uGAZgiHkl7lvDeC+0QrXJHYEY+m4rfzHk
bS+8WmEX2hSEoUBT8/P88r3wwMCdwqwXGJpQLTkhrdEDj/8sKOBKwFDiho38
OfMuOKdfxh7wHkPPjyo7yml0wfWQvxFtHzDkfH9HPrdoFxS/LnuNvxhD56Zj
DnaNf4NToyaViSUY2uqtkbSw+wZ9Uhpz4ysw9E+psNA9905oZumfrlGHIR7X
rxyRcR1ww0aSQ6sXQ2t//3DNPuqAgz3HM+72EfPlK8Sv808HPKkYoRP+HUMZ
Edb71/k74LeMsoieAQyp55PUzCLb4euRMSv9EQzdmZCxEw9rgy9/DakNThPj
sbvg9MShDVLMX6pO/sKQ4rLzo+7zbVBJ8rT27AyGthmrfAOxNnhVe8p+dRZD
EXuvJPx+1gpPuO7E5xYx5JHFnmRLbYHN6dIk7w0M6ZYY5Qh9aYYbpSt5tpsY
4q1NLGkLbIYDZ6dtjLYwlDl8pF2JtRmmb0nQhP5i6KvA9R3bjE2wnpS4HstI
Q9L+H62C1xqgmppIlBIbDXXdsJHOG6kh+gvL+govDVX06x8tSquB9aNi56P4
aCjtkpJ2+Z0a+Lraf1mJTkNOOtumjbOfYd8pyyN2O2mIUyY0bGKjGjLhOoEN
AjSku1i4JsRbBXl19Pzl99KQnE00s0TXJ+gtfeBPMWH+MTfuQ7GfoObto2Uq
QjQ0/u2EjKrwJ1jwifmYujANeZV2mRvLVEL3zhBMVoSGHuxYDdoXUAG1/Pvk
kBgNaS/DdFlaBeyw/VEnLU5D3BP+lWovy+H6XFThC8K5DYLLV5LK4FCWjKeF
BPH8MHWT8JJSaMr079aYJA29f0p+mAhK4URz1AEtKeJ9D1pDcj+XQMF8n+zX
hIWuWFY1tP0HH59YSNOXpiFjYV/pHT+L4DUma4/EAzQkzn1em8uhCIqeCNGa
I7y0g99MaOUDNPmbfFVdhobCJjLDVBg/QLbF196dhBtym9buCxbCnUnCpbMH
aSg6MZLbK7EA7gxeoMsfoqGb4eYyoeIF0DW/suYe4R0P582z5d/BjxUmQrOE
nR9JB9e/zIWdA2/ed8jS0Lnfc9/y0nKg96HbKWQ5YjyWxUKRxdnQ0mNw+Rjh
Tl3td5Y9byF4/utzDOHscvZ1nZ+ZUMD0qVYtYe/DbZqyGxmw1Kh1/yJhBQGz
rxu702HYlWDuk4dpiD1o/57hg2nw3E6SkC3hYdK0VZ16KnxyXSoknHDYpPNq
hEUKHE9Nie0mfNtEHX/smAx/kJeV/hDGW5kCrnklQbxtW5FfnoYG7EWVTHQS
ILO0qpkB4aDL+TWS1q+g2JK9/13CqkDNePlZHFSMN6F7E54Wb5iqzImBbYqM
rHGEY7HLj4NboqBMk4VpPmHdlRHK1fmX8IGjC72a8Fq/w2sJngh4/YCuwjfC
6Z+3ZJcUw6ElY0fhOOFLOYGV6FIolN7ki14mzC4tmyY4/xwO7+YeYlQgxv9H
p75QMQD63Kp9hhGuqbP8ddbFBwoOKMXxExaNdqONf/SE856m2D7CjC0yVtvb
j2GdofqYBOFyW4ssOV8nSLnYLXSQ8Dy/5MhnQWu47HWgQo5wa/bewYsXLsHn
Q0eRPGGma2eE/bXUQZfNlpgC4cxDyc6UUkvQL+E2e5hwjMur5Y5OBxDF9X63
LOH+njt5SedcwKZUao40YRGVI3fsa5+AWYfzyfsJK5zzDNub+BQIjxes7ybc
6XHLzsfEDzAGtBTxEHbO0zvzi/8ZCDRO/cZKWHBIQdKwMxgIGir+s0nMhxlr
EGO/ThhQfOim8ZtwnjDJkVPiBThf4f58gDDp2P1BLeaXwEdcWaWJsIHBuJ7z
SCTQy8jSKyWcfOdK2dvKaMCn0l2VSlg7FsRwecSDc1Ymfc6EXxYUkE+YvAZH
BwrdzAjfH+NWUd2TCFSlqz21CFdv+WTabyQBma9YMSvhXwHQIuBnMlBZ0JmY
JNYTH/3PzpSeFOBmqfK4lvDNQza+34pTgaGzTvMTwsGlqWpzaWngXoZl0BXC
xScHl9gi08FdLcX8w4RZzS9cV3PKBL/tN4X7ifX+NkQZfyOXA7BLfHnChJmq
E8rIirnAf4JXZIqoL/M1lmN3j+aB/WLdeXmEA/N/8gsk5IPo3tRdRwmrC5Rw
DaUWgC52dUVZoj7vFv5qCZMoBO+sVdwn/7e+9YSDtTILgRnfwlAC4QVPP/b0
7PcgoujpGivhtJ9GO+wKiwDp6vqtaqJ/dHgHVAopFYOIwz6+doRJQuVP2oqK
gfHAB0gn/I/h/k3F0v9Av+OG5zWiH9HKFpY2UCnQZM49MUT0M5egkPGA5gog
KBD62Yvoj6kSVW9U9CHQOnrrOUa4vXLFcqYNguaeUNvo/TRE38i1z7BGgK3j
o0eaKA05yNJ/cdhVAr+vj/uy9tGQWPToaLtTFRDyjnxwdQ9Rn1bbVVkfqsCD
25vf63bT0AV5/hTvFcIdjGaKhP/9cubaEZdq0L+nMJt5Fw31kgr7Yx5/Bq2W
TY/C+Invc8fzm4VXLfDuPlSvx0ND/o0MH0YraoH815I3GdxE/z3o9eL2Ri1Q
2YjvYiDsPO+l7+BUB5Jy+LTyOGnIwtW74cnNerAILxxaodLQ4QC/itenG0Fz
4hBQZKUhmWnyKxG/RnAqzM3HiUz0Qz3/x2lVjcDqVYNwIQux3rkClHNVv4AX
238uH2Am6jcmsKD8UBPQtxypJhP74deMoLTv3C2g1I3FxYHYX5vZMR+L8y1A
OzeHHLlO5C+b4Oujz1pA80jUz5I/GDKLPsX5kLEVVHq5Zm6uYsjQRKfJ/XEr
YP9EZ7FbIvLUqO6pINs2sIC5UUjE/k5dOquSbdABBBdzkwaJ/MDZK3/d+V4H
0MHu4P8R+YIX8T/TfNEByrp3DQQT+UPw+Whv99cOUFj/kfdIN4Yk97s9Yjb+
CmjW2ZY2HRjSvJhVYmbWCazeCQq41GPo4Xs2Za67XQDlc2iyEvnINXbW/Puz
LmCqkVuXUIAht387/dKzu4Bi8YCq0jsMPT2b1KX2uwvUxItPX8nFUOiosrO1
YzfovOFyJjADQ1m8t4uqnHsAl5uOk288kS+dahQfevcBfez323EvIr/VMQtm
vOkD6gFhipqeGOrefeJvT3UfcNjgSI17gqHW6qp6NebvQHJ//hEdNwwh3koz
Zt/vwC7+HIP/AwwlvP/oH+HXD2Tl5fWTbhHzuZT/vSBwEFzg8zyocJrIZzpz
laNvB8Fl7Zs+ujpEno2XTac3DgJ9F9dE05MYEhfpUi5nHgLdiYy7nmhiaG+D
0Y59J4cARXVlM+04hjBBw+jJmiGw8U7jZIA0hn6X6H1yrvsBuK085oJYifzM
Vuv0uOsHMHCeJP3LgiETY1ziyfgP0FtUvWLPhBHnevnnvkzDQEE9LEiXhKFU
Bf5LL/Fh8DvuuObIKhWZ5AxPFfw3DPh5raLyxqmoIdGZ63fGCKBwNLEmE+cD
hrm5qvniEZBsm0k/h6hIGVg/XK4ZAY2vjn1fLaeitH6Tvs3REaAmoOGvXUJF
noKaqRz7RgGj8C7lT3nE/RGUY1Ixo6BFqihcL5643y/J4kbAGJCbivgv+j5x
3nhnm5cdMwaGTy+WQgcqEuw7tr2UOQaSeDtaRmypKPhQe5xPwxhIeyEsKXqb
ih52MnalcYyDNzWfDT1MqOik6A29qaBxML56MeqNNhWNV4gftwufABRXR7tE
bioSW8nicYmbAtqLh2e/vKEg/s8GIllvp8BU28DeG0kUxB6xKjdQMgX2/1U5
tvaKguYOa53T7p4CmXGBYjujKKjMttefk+8niOX7lSgbQEEXx1i3M4J/Aq1l
c+16Gwry+mo12eM5DRozamVDD1PQQIFQucrtGfD89f31hXwO1KR8T1rEeQao
c8Tp1mdzoLKK6ihW3xlg4jq8Oz6DA8U13LnXmTIDalMiTx1N5EDGw4US9oMz
4PUGyUkrhAO1cemEJ1/6DUTz2k3e2XCgageHW2wnZsGjDxyCnfs5kFHUkP90
6By4+HS9tCGAHQWfKqQyxMyBu5FSHZre7Khu1SecnjQH4vxHlIuI8/1x4wPx
Gu/mQETl2nDwfXa0V+BhXlTbHPhbN3iXbMqOJmM5vmlxz4MKh+tiPLLs6NHr
I6LxL+aBi3s0p3cLG3qd+rz8bOQCuLYqxHWSgQ05SZ5N7nq1AHItnaYX1lmR
bhaHn2XqAvAu2XEgbokVLeUH6ru8XwAZ87Ht/ROs6EyZ/0hK+wJwVTEOO9DM
itbavdk2sEWw/D5NbSKGFRmQ3I0y/RbBvggp9o6DrIjpqu0Ms+sSEGQkee85
RUbNFpnpF7xXgFaE0ckNCjP6QBU0XbVZA78n29j4XjEi8dh9k+Sz60DHjrkz
pPwvXH/ovZVluAnetCtU6K2swen1XViG8jZwujX73rRzHibe8vu6S5SEI81g
x4i7wzBU48tzATEGnLTbPfHsCz+A2WdpVvEx4ombhq1vI0ZAhfZ/5UWCO3DJ
bdV2PdFlsGVrfuQSxoRrj7Ce6jpHwhnI7TEHtphwl7zrSUL/sOBHdO59Ok1i
wS9uHW1yvUbF179nT/ItsOCj3fO68oe5cW2bulC9FcJv4pwvaHDjQRsjyj7r
LDjl1tDCQwNuXFhwV8ASIxnntA9p/+LIjZ+6HCDVwUPGy0JalbMLuPGINivr
UCUy/v4tb+ExJR78UM3eX+yuZLzA4fhMiBov7mJ0PELTnYwHfti3cuwcL145
aqT6yJOM66vLnJ8048Uv7gh6PhVAxhMvr80b/MuLP8Y3ZOpiyXgy8N00ruLF
60q7bH3KyPioMf+RI6f5cO7Ti3zliBiPxv7TYlf5cJMerGKpmoyfFPbK47fh
w2dXT2A3msi4XZS7HSWYD6crvc/VHCDjpPMPoEQ7H25R3XLp0TAZX5PnsTg2
wodnGk5vvxsn4zLmLy+cX+LDVe+JnN83S8ZdKoMP+tPpuC+D+qrxIhmvnpWi
Z0nQ8dbQKwmhq2R87tK8frsyHRcUfnCqboOM83es9G/p0vH/+/+J////z/8B
1DpU4Q==
       "]]},
     Annotation[#, "Charting`Private`Tag$18084#14"]& ], 
    TagBox[
     {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$18084#15"]& ], 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
RmE=
       "]]},
     Annotation[#, "Charting`Private`Tag$18084#16"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
nP8BkfyqGQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$18084#17"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt2Hc0l98fAHD7U5LxeR59pb4oGUmirEL3ySgqIyTJ3nytSikaXyo7UQgN
KzMrpAj3imRlj4zskZAREtHvfs/5/fWc13nuec49577Xc3dZu+vbMTEwMNAZ
GRj+e9rkhs/++UNDmuN7/Tm28VLkGr+o0m8aEs8zab/CxktVHU8xvbpCQ5Fz
uX7DyyQl2l9cOz1HQ0Vdl/586CKpbxwjyd1DNMQfzeL1OpakPJzljAsqaahh
n+8peQGSuiXSg+wDaEj9XeBc+V6Cinsi/PATJw1xhOTITpzkoeIHAt3PbGZD
4lxCVUYd7NS2ZgPdvbys6GmIosHpzSxUjZ6Ber0IC5LW1JP2DV8DmntFPIV3
MyOhUdYk08YZcCTHNLXpABP6d9zGbtGpCawG2xMH9zIidPAyr4pGH1z6+SLK
XIwBbXIRii/6OQerdj+ULXfdgDE/AIuMyy+oxHq7YJ/tb1ijLRDTPsSAIikF
hWM3VyH9jUFjsD0LsnlqPPYtfgV+HqwPZrhDQ01pApsZ45ZhspnJ9hJ/diTA
kScDixZhFc9gaR7LVsQuNN40mbkAZex1DQxtuZCL4b2Y9PQ5GM4YVbpUyI0s
KwfqBR7OQIdBm7HX93jQbpWNMx98J+H0mJ+d0gk6auZRkYy9NAl36e7TbNai
o1vjPmyuNpPwn12ZHjan6ajnwa8SUmMSnitZj7x7ho4eDS8K226ahE8H0hTy
L9ARS+DUEtODr3Bf6bLmO3c6Gm/9HEs9nYD5Od+TA6LpKMOxYOhd0RiUNiJZ
hAboqN06XvBU6hjMq/Xo9xqiIwazELOeqDG4oNPa9GmEjozO2HSveI7B2utW
vy5/pSOmI0SL3KExuLGr6HLGPB2ZbLmMcnNHYXLNMZtiZgKx5xyMT04fgbvE
O9fcRQkkly7w5WDMCGxs+O0bIk4gyyT2He8DRqAKQ8u+FAkCFUUPRw/aj0Cf
0KmpVikCWd9+GPa3yAj0v54mxqdAoBK9hZuPE4dh4QJPt9YJAjn/eGUaEjcE
Q4ltVqftCRQrP6/kEDwEdTu/q+1xJFDNdekdat5D0PWtqd2qE4FEGHK7V88P
Qfoyo12iK4EGObKMnLcPwbtZseY9ngQ6K5qqpxUzCD812l1a8SOQb75sEKfk
ADwWyP1u/BmB+hULTlRvGYC1UpwT/vEEUoYybLem+uGBygljkUQCLddL3ZnJ
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
WpM=
       "]]},
     Annotation[#, "Charting`Private`Tag$18084#18"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
zbBhVA==
       "]]},
     Annotation[#, "Charting`Private`Tag$18084#19"]& ], 
    TagBox[
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
fcj/AHS/jdE=
       "]]},
     Annotation[#, "Charting`Private`Tag$18084#20"]& ], 
    TagBox[
     {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJw12Hk0Vd37AHBDXKlMl3vQ+yJjJEqRovZJCQlJSSWUqMxJSKKQKXOSoQyZ
Z1HKuLcQIdeYOTMZKlOI0ne/a/1+f531WWevc/ba53me/Zy946r9GQsmBgYG
HkYGhv+u5vlhP/7+pSBlPvHu20NUknddUFLlNwWNaZqEprVQyZoTqcbOqxRU
6akU1Y+opOSXko+zcxQ0p2sQcSaJSk5vHU3uGaagixkqRy2vUkkHK0WjomoK
Snz54IrsOA/pIdGLLP0o6ORS1ITCN24yNk4s4hMHBf32dU4TpXCRCYP+9vqb
WZGRnf4vL1k2ktZioCfNx4KMb0CRiiOMZP1pg+ONEpvQDcopS3rRT6ApLeEk
JsqMwjax9lvZDINDecZpdHkmRNoHs237WAPXAi2pCtKMiGuHXJz+6gz8uZLy
1ESKAe3xdvB/q7MKa0Qj9lfabsAUC6WAzc8YkAqLZ9Gua79hx/P17emMLCiS
PHDg6P01+H30LSlYy4bMnxuNTyeswudM5iJPRLcierrQZsbYZegtw79vtwMn
EtpasBcWL0FStMsoW5AbsYtM0KeyFqCCxR2NxFs8yObso+iMjDkY1eg76hVL
RWbVg41CEd/glP6JpPBgXiR6eEO/9uEU7B6k/f56iw+1cB+WjXGcguX0Mw2/
nPiQx8Q9VlvzKZgUFJDD5sqHekN/lfKqT8GJ0dFcEQ8+9GRkSewa2xRcXhbN
PhjIhzb5z/xkCv0Kb5kF13K+5EMTbd0x5PNJOL29n1+3hQ9l3igaLiseh5la
lSrCUjTUcTVBWDttHKrB39LfpWmI4fLjy71Px2H8AeuJUlkaMtQ371l1God9
VmUNOgo0xHSI2qq4bxxSV7U0LhymoYtbbqP8/DEYfP4roBjQEHueQkJyxihM
18+NQe40pJghNKAQPQqvmHW+1vKkIbOX7Nvf+43Cm89DU1oe0lBx1EjUkOUo
vHzSjqnbl4auekaE/CsxCtsvZZU3hdFQ6emF+8+SRuB2espp3RQaslp8Zfw4
dhg22H/gKvpIQzFK8yrXA4dhtuA+n9lGGqq/u2f7MbdhuGDOPC7WTEMSDPk9
axeG4eyinn1QGw0Nbc0xtBIYhhNeXFnH+2jonGTaaa3oISj/YqVNf5aGHhbu
D+CQHYTpjG0lg1sJ9EW5SOPDlkFosLeHp4uDQKpwL6vHzBcYZ1xt3MRFoOVG
Oe9vWV/gclx8dQEvgWzGd95vkv4CZa8tDZr9QyAj/n9vBUoNQMkfVpYmuwgk
58FygVWsD8qrOCnTNQgkWNry7OumPnjS3TzwuhaBWJbjPjdM9MLsK6XUjZME
6rdVOBua1QuvBLU3SegSKPCyqR6/Qi+MbxfoNT1LoEnVEnWZoz3wH7Ysaw8z
AiWu2yjomnbBf7063lm4ECjogPKtPUe7oLGRPketK4FcbjMX8Ih1Qbp2xHNR
NwLpzsTs7pr4DKf5vM273Qn0p/fDTjO7z/C24pbncl4EulgqIux4vxMubM2q
fBREIOrdji1Rce3Q+fbI+pcEAq3+/cX9w60dsnMw7hFKwuvlK8yvebEdbpVl
1r30kkAZkVbia/ztkNOjSYOeQqAjBQyHTaLa4AVzyX3xmQS6OSlrJxneCjdX
yHzvKsTzsTvj5OnQCm9ZmlT/LCLQ/p8ubt16rfAdX5sX9xsCbTBV+wZytMIj
DUFI7S2BIoUuJHx/3ALVa1oOBJURyCObPcl2Gx3qlmgLlFUTSKvkXK5wUzNc
5Q6JfFtDIN66xJLWwGaIbpxZe1VLoMwRpTZFtmYY52T3KLGOQB0C5swbTJ8g
0tSJvdZIIBn/MouQ1QZ4+vCeKv82AnVds5HJH/0AKUid9+gggSoHTh8oTvsA
Yy9PJn3HTjNUPF5x8wPs9S0xiR0ikJPmxuXGH7WwbnjRYnaYQFyyYeGT6zUw
IH4gy20Mz2+xaFWYtxo2/9XnJKcItMcmmkWq6z1c07cPa8HmH3fnkYt9D+13
N5Km0wSa+KwuqyryHipuPirvMkMgr9IuUyPZKjhTo3gs/BuB7jCvBO8IqIRF
La817OYJdPwnTJfnrISx0uvlw9g8k/5Vh59WQOdyvysGCwTKaxD8eSGpHH7t
dlLeu4ifH37EOKKkFN4l0v/tWiLQa2+KcyIohfF+UttUf+L33WkJzastgcPX
5nYlYAtfuFrd0PoOsh01XjFdxvEu4ivDPF0MBbuTahtXCCTJo3ec26EY2gtb
y4uuEmiJmd9EePkNVDvqUe+MHT6ZGa7C9AZuee7lL/iLQA15n1ZvCxZBozlW
8tQagaITo3i8Egvh7GVR8UhsywhT2TDJQrjXy/9ALzaz87xpjsIr2K2iOGu2
juPbTSbk49M8yELyBBv9xvH0fe5zfloufJkdRQ/Dlrz6VjjqbQ4sLnc1qMPu
1Dr+6mpPFvRcPCcs/4dAORXsa5rTmXC3tP51M2yfva1q8usZ0Ek8ay4Ue5+A
Scf6P+nwufeduils9mDxf0d2p8Hh+Ule3g0CjTDMWNQfSYVPD71LVsUO/+qy
EmmWDLdZOT7yx75hfIS8d+sl5Dtv3J2NTbZsCrjilQSldqXYfML+Yi+maKyZ
AEvDdC5s+Uug4PMFH3ZavYBpEvmvpLBVwWGjn4/joEeGnbYa9oxkw1RVbgzU
FwySvIQdy3H+Xgj9GWR3pxxzxNZaHt16af4pPNc8lOiHvTrgEC9FjYS13Pxk
HHZ67R/5pf0RkH4iVyQX2zA3sAoZhsEy20S1Cmx2Gfk0wfkg2OE7n9qIfeOX
5sei/QHwcETiyW7sD/VXZ0+5PoKCYbl7RrHFot05J8oeQrcH/Eaz2Ex0WYuN
jXvwpvkwWsSusDXL3uPrBOeU2ax/Yc/z7xytFbSCHIzBhn+wW3KEBs+eMYQN
Zfbef7E3XdEW8T92BAjfLJj/z5lyL122ll4FnJv1kjawY1xf/GzvdAAxcdoR
69gDPTfzk3RdQZlIWs0ytqiK0k37Ok/gHG2iPIe9T/dhuFCiN6hjuvNtErvT
47rdI2M/kGg6NTqA7ZKvoz3L/xis5pVtb8MWHNq306AzBLyam4mswTZhC2Ya
0AwHOeJuem+w80UYbnFJPQH5Jy21U7AZDt4ePMbyFDheLfAPx9bXn9BxGY0C
z6yNKPexX968UJ5VFQ0SLEzqLLGPx4IYbo/nIF7aZ4si9tPCQoq6cTxomU8O
FcC+Pc6jovpvItBP33HuN46Pmj+PMu3Xk4Boh1JKOfZsADQLmH4JajSad8di
89F+Eck9yUAhqXr1DralnI3v57epYPda3Zmd2CGlqYfn0tLA34XPwxs4ft+e
GFzaHJUOxGqOFbZjs5meMT/slAm0+pUIV+ysUGUyZU8uGFHxms/G+bKpJqGc
sj8PnDMKr7bHNl1lPWh9IB8ck1n324sdWDDNL5BQAPYXf5nMw/l4RKCEeyi1
EFBCR5nDcb5aF83Sw6WKQPmDDzeO/5ffOiIhxzKLgHAwM/qJ83/hoR97es5r
kOzzWP0Mdtr0OWa7omIgZUDPWcD1pN0noEpY8S2wC/JMeYrNIFzh2Vr8FrhX
+IcoYV80EP+9v/QdWAGpBx1xPeIsX1haR6WgKYZhtgXXM9fg0ImA5kqQnMNU
tQvXw1Sp6hSV0xAEm4p9yZ0jUFvV8tVvrRC4SkZ/241NW8+zz7BC4ASX+6jU
DwI5yNNmt9hVgZQJoV3MuN5KRI+NtTlVA/FKDenzX3F+WmxUZ7+pBl5y16zf
TRLojAJ/ss9yNXCTbUggsB80aV9Rcq0BqSL2g/RxAvUyFA3E3KsFozyMpVKj
+PvcfPjZzKsOvOhU73MaIJB/I+Obsco6YK34ROh9P66/u72e3FivA+/ZN55t
w3aZ9zrt4FQP3Kcldyf0Esjsrk+Dp+VHYC2eMJTTRaC9AX6V8ScbQerZDivH
VgLJzlBeiPo1AsYQTc7kFlwPdfzvpVU3AmoVmmql43jnDlDOU20CFKE3pEwz
zt+YwMIKuU/AXui2c20D3h8zgtP6eeiAIV/tbyreX5vZOR6Z6dFBaPoMU+l7
AtXbhJiPPaYD3/uOqk1VOF+iNbicmVpArhyH/gwkkIGx5qf791qAGos0A285
Xq8xLY1g21YgysR5m/M1gbYtnVLJ0W8HPeN9YXm4f+DqVTB3cWwHCjXlCQ64
v+BF/I/VnrQDevHQkz2JeL5BY73dHe1gTP/zrqwXBNop7u7GYtQBWM4XCPhE
E0jtbHaJiUknyJW1nWgLJpDz683K3NZdwKS/nbXfmUB3Y3+Y9j/uAnbX+fMu
3iGQ+4NOv/ScLmC87n6w6zaBvE8ldR3+3gUWWVx+f3QgUNiYsovVrW7gtN6z
N8qKQNm8N4qrXXpA+1sBvY+XCTTk9GG/s08fYN0r9SNGDfdv9SyCGSl9YD70
idYASaDuf9T/9tT0gZYTQzFCANe7muqPh1n6QY9W5/Y4FQIh3ioTFt9+MGer
knxvP4ESXpf5R/oNgEy13PxeCbyeSwX9hYGDQH25Zg8XhUDfS3Teu9QPg4P+
FuEG1bjf3VzndK9rGCDuRe9DVTRkbERKeU4MA0uH7ixhSEMNywpBvptGQGGl
6tOxUhpK3cdv+JQcAWVGl3uMCvH43JGpwncjwLuigWUmEY9PdOH+njEK7h83
EXiD+/k0vySzawHjoNQ2MK9bDvfzr2zzc2LGwXntjvu8+H9BsO/gxlLmONA8
ryypi/8nQuTa4h41jIMkqVuMZWI05NzJ1JW2ZQLYiDzoc+OnoRNi13SmgidA
bkvuTAQjDU1USh6yi5gEu+5c6BRt40MSy9lU17gp0Htxn2GRDR/6UihcoXLj
G7D38zrq/IwXnXs25D8TNgekQvwXtNOpKD41qOJU1AKYnjN0VffgQZsu2X5j
ubsEaEo7GDXUuVGzWWb6GZ9lkK5zIu1FOCd6s03w8orNKujtW3xAv7sVScbu
+Eo5tQZ0DdJU8ndsRmvOPn+yDX4DtZGDjOViLGhmbTtHhvIGEJSPeDLMwYgS
r/t1bBdjIG80H0sPd1mFYUebggQkGMm51ofUJL1ZyGGfrVbNx0Q+QJqnz4o3
w8rj7yqKBZlJM/fcSM43Q+CPramSIccm8us4EVJ/fwkwUtpidv3ZRNZTU2Uk
ohhIJU3H9ycZWMmO6fWOrVMUcq0/5yvfAiuZ0ZfRliHDSR63qQ/TWWYlT9vQ
FTa0Ocng9VHlR2usZL/v0MdLtpykiOD2gCUmCsl1VzxevoCT1DgfIN1OpZBC
2tZL/2znIiNbLazCFCnk/oqMzNkkLlLug9As+10KGb9QMv2ykJt0PXcoUu0+
hWQT0LncWs1NVo2dU3V7SCE70nPmmDu5ybPMwUFTARQyWuuO250VbvIeuS5b
H0shg/RShQJVecj60i7bR+X4vvZy0906HpLn5CJfBaKQq+YmptPdPKRxD0fl
Ug2FdOcV4DOd5iF/rKhzXPtEIQt8xGfObqOSNMXXeWpfKOSQ9Yi6owGVNKuh
G7qNUEjDN3IrzBZUMtNgZuPVBIWMfU/5FONMJVUdRfV2/KCQS97rE60xVNKX
8ciK0SKFHMs23+WUTSVbwi4khK1QyCjPxUjBCiopKHJHo36dQvp6torVNlPJ
/zsPIf//POR/rLiq0A==
       "]]},
     Annotation[#, "Charting`Private`Tag$18084#21"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{588.19140625, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {-5.999999786751032, 5.999999020408195}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.784400509650148*^9, 3.784400672371614*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"9e3705bc-ce4a-4d96-9906-6ed9639c8c7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"H4", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], "m", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"z", ",", "I2"}], "]"}], " ", "+", " ", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"I1", ",", "z", ",", "I1"}], "]"}], " ", "+", " ", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"I2", ",", "z"}], "]"}]}], ")"}]}], " ", "-", 
    RowBox[{"\[CapitalDelta]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"x", ",", "I2"}], "]"}], "+", " ", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"I1", ",", "x", ",", "I1"}], "]"}], " ", "+", " ", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"I2", ",", "x"}], "]"}], " ", "+", " ", 
       RowBox[{"\[Tau]", " ", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{"x", ",", "x", ",", "x"}], "]"}]}]}], ")"}]}]}], "//", 
   "MatrixForm"}]}]], "Input",
 CellLabel->"In[46]:=",ExpressionUUID->"c3b2de7c-1144-4227-9b94-9f566c65b63f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "6"}], " ", "m"}], 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"-", "\[CapitalDelta]"}], "0", 
      RowBox[{"-", "\[CapitalDelta]"}], "0", "0", 
      RowBox[{
       RowBox[{"-", "\[CapitalDelta]"}], " ", "\[Tau]"}]},
     {
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{
       RowBox[{"-", "2"}], " ", "m"}], "0", 
      RowBox[{"-", "\[CapitalDelta]"}], "0", 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{
       RowBox[{"-", "\[CapitalDelta]"}], " ", "\[Tau]"}], "0"},
     {
      RowBox[{"-", "\[CapitalDelta]"}], "0", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "m"}], 
      RowBox[{"-", "\[CapitalDelta]"}], "0", 
      RowBox[{
       RowBox[{"-", "\[CapitalDelta]"}], " ", "\[Tau]"}], 
      RowBox[{"-", "\[CapitalDelta]"}], "0"},
     {"0", 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"2", " ", "m"}], 
      RowBox[{
       RowBox[{"-", "\[CapitalDelta]"}], " ", "\[Tau]"}], "0", "0", 
      RowBox[{"-", "\[CapitalDelta]"}]},
     {
      RowBox[{"-", "\[CapitalDelta]"}], "0", "0", 
      RowBox[{
       RowBox[{"-", "\[CapitalDelta]"}], " ", "\[Tau]"}], 
      RowBox[{
       RowBox[{"-", "2"}], " ", "m"}], 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"-", "\[CapitalDelta]"}], "0"},
     {"0", 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{
       RowBox[{"-", "\[CapitalDelta]"}], " ", "\[Tau]"}], "0", 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"2", " ", "m"}], "0", 
      RowBox[{"-", "\[CapitalDelta]"}]},
     {"0", 
      RowBox[{
       RowBox[{"-", "\[CapitalDelta]"}], " ", "\[Tau]"}], 
      RowBox[{"-", "\[CapitalDelta]"}], "0", 
      RowBox[{"-", "\[CapitalDelta]"}], "0", 
      RowBox[{"2", " ", "m"}], 
      RowBox[{"-", "\[CapitalDelta]"}]},
     {
      RowBox[{
       RowBox[{"-", "\[CapitalDelta]"}], " ", "\[Tau]"}], "0", "0", 
      RowBox[{"-", "\[CapitalDelta]"}], "0", 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"6", " ", "m"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.784400773003799*^9},
 CellLabel->
  "Out[46]//MatrixForm=",ExpressionUUID->"782c2185-0529-4875-af22-\
45853c7afc69"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ham", " ", "=", " ", 
  RowBox[{"H4", "/.", 
   RowBox[{"{", 
    RowBox[{"\[Tau]", "\[Rule]", " ", "1"}], "}"}]}]}]], "Input",
 CellLabel->"In[47]:=",ExpressionUUID->"56e268e3-2546-4f19-8ce2-d5037254124b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "6"}], " ", "m"}], 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"-", "\[CapitalDelta]"}], "0", 
      RowBox[{"-", "\[CapitalDelta]"}], "0", "0", 
      RowBox[{"-", "\[CapitalDelta]"}]},
     {
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{
       RowBox[{"-", "2"}], " ", "m"}], "0", 
      RowBox[{"-", "\[CapitalDelta]"}], "0", 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"-", "\[CapitalDelta]"}], "0"},
     {
      RowBox[{"-", "\[CapitalDelta]"}], "0", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "m"}], 
      RowBox[{"-", "\[CapitalDelta]"}], "0", 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"-", "\[CapitalDelta]"}], "0"},
     {"0", 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"2", " ", "m"}], 
      RowBox[{"-", "\[CapitalDelta]"}], "0", "0", 
      RowBox[{"-", "\[CapitalDelta]"}]},
     {
      RowBox[{"-", "\[CapitalDelta]"}], "0", "0", 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{
       RowBox[{"-", "2"}], " ", "m"}], 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"-", "\[CapitalDelta]"}], "0"},
     {"0", 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"-", "\[CapitalDelta]"}], "0", 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"2", " ", "m"}], "0", 
      RowBox[{"-", "\[CapitalDelta]"}]},
     {"0", 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"-", "\[CapitalDelta]"}], "0", 
      RowBox[{"-", "\[CapitalDelta]"}], "0", 
      RowBox[{"2", " ", "m"}], 
      RowBox[{"-", "\[CapitalDelta]"}]},
     {
      RowBox[{"-", "\[CapitalDelta]"}], "0", "0", 
      RowBox[{"-", "\[CapitalDelta]"}], "0", 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"-", "\[CapitalDelta]"}], 
      RowBox[{"6", " ", "m"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.784400783624587*^9},
 CellLabel->
  "Out[47]//MatrixForm=",ExpressionUUID->"750bea37-35a3-489d-9618-\
e894674f4fe9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]", " ", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "2", ",", ".5"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7844010740866957`*^9, 3.784401110010531*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"f1231f9f-03db-4c62-ad7a-626d1cb8f0ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Eigenvalues", "[", 
       RowBox[{"Ham", ",", "1"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{"\[CapitalDelta]", "\[Rule]", "d2"}], "}"}]}], "}"}], "+", 
    RowBox[{"3", 
     SuperscriptBox["m", "2"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"d2", ",", "\[Delta]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7844009422107983`*^9, 3.784400942973177*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"a1a2ed2c-2a55-4710-a391-eee7f193e7a9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"-", "6"}], " ", "m"}], "0.`", "0.`", "0", "0.`", "0", 
            "0", "0.`"},
           {"0.`", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "m"}], "0", "0.`", "0", "0.`", "0.`", 
            "0"},
           {"0.`", "0", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "m"}], "0.`", "0", "0.`", "0.`", "0"},
           {"0", "0.`", "0.`", 
            RowBox[{"2", " ", "m"}], "0.`", "0", "0", "0.`"},
           {"0.`", "0", "0", "0.`", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "m"}], "0.`", "0.`", "0"},
           {"0", "0.`", "0.`", "0", "0.`", 
            RowBox[{"2", " ", "m"}], "0", "0.`"},
           {"0", "0.`", "0.`", "0", "0.`", "0", 
            RowBox[{"2", " ", "m"}], "0.`"},
           {"0.`", "0", "0", "0.`", "0", "0.`", "0.`", 
            RowBox[{"6", " ", "m"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"-", "6"}], " ", "m"}], 
            RowBox[{"-", "0.5`"}], 
            RowBox[{"-", "0.5`"}], "0", 
            RowBox[{"-", "0.5`"}], "0", "0", 
            RowBox[{"-", "0.5`"}]},
           {
            RowBox[{"-", "0.5`"}], 
            RowBox[{
             RowBox[{"-", "2"}], " ", "m"}], "0", 
            RowBox[{"-", "0.5`"}], "0", 
            RowBox[{"-", "0.5`"}], 
            RowBox[{"-", "0.5`"}], "0"},
           {
            RowBox[{"-", "0.5`"}], "0", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "m"}], 
            RowBox[{"-", "0.5`"}], "0", 
            RowBox[{"-", "0.5`"}], 
            RowBox[{"-", "0.5`"}], "0"},
           {"0", 
            RowBox[{"-", "0.5`"}], 
            RowBox[{"-", "0.5`"}], 
            RowBox[{"2", " ", "m"}], 
            RowBox[{"-", "0.5`"}], "0", "0", 
            RowBox[{"-", "0.5`"}]},
           {
            RowBox[{"-", "0.5`"}], "0", "0", 
            RowBox[{"-", "0.5`"}], 
            RowBox[{
             RowBox[{"-", "2"}], " ", "m"}], 
            RowBox[{"-", "0.5`"}], 
            RowBox[{"-", "0.5`"}], "0"},
           {"0", 
            RowBox[{"-", "0.5`"}], 
            RowBox[{"-", "0.5`"}], "0", 
            RowBox[{"-", "0.5`"}], 
            RowBox[{"2", " ", "m"}], "0", 
            RowBox[{"-", "0.5`"}]},
           {"0", 
            RowBox[{"-", "0.5`"}], 
            RowBox[{"-", "0.5`"}], "0", 
            RowBox[{"-", "0.5`"}], "0", 
            RowBox[{"2", " ", "m"}], 
            RowBox[{"-", "0.5`"}]},
           {
            RowBox[{"-", "0.5`"}], "0", "0", 
            RowBox[{"-", "0.5`"}], "0", 
            RowBox[{"-", "0.5`"}], 
            RowBox[{"-", "0.5`"}], 
            RowBox[{"6", " ", "m"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"-", "6"}], " ", "m"}], 
            RowBox[{"-", "1.`"}], 
            RowBox[{"-", "1.`"}], "0", 
            RowBox[{"-", "1.`"}], "0", "0", 
            RowBox[{"-", "1.`"}]},
           {
            RowBox[{"-", "1.`"}], 
            RowBox[{
             RowBox[{"-", "2"}], " ", "m"}], "0", 
            RowBox[{"-", "1.`"}], "0", 
            RowBox[{"-", "1.`"}], 
            RowBox[{"-", "1.`"}], "0"},
           {
            RowBox[{"-", "1.`"}], "0", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "m"}], 
            RowBox[{"-", "1.`"}], "0", 
            RowBox[{"-", "1.`"}], 
            RowBox[{"-", "1.`"}], "0"},
           {"0", 
            RowBox[{"-", "1.`"}], 
            RowBox[{"-", "1.`"}], 
            RowBox[{"2", " ", "m"}], 
            RowBox[{"-", "1.`"}], "0", "0", 
            RowBox[{"-", "1.`"}]},
           {
            RowBox[{"-", "1.`"}], "0", "0", 
            RowBox[{"-", "1.`"}], 
            RowBox[{
             RowBox[{"-", "2"}], " ", "m"}], 
            RowBox[{"-", "1.`"}], 
            RowBox[{"-", "1.`"}], "0"},
           {"0", 
            RowBox[{"-", "1.`"}], 
            RowBox[{"-", "1.`"}], "0", 
            RowBox[{"-", "1.`"}], 
            RowBox[{"2", " ", "m"}], "0", 
            RowBox[{"-", "1.`"}]},
           {"0", 
            RowBox[{"-", "1.`"}], 
            RowBox[{"-", "1.`"}], "0", 
            RowBox[{"-", "1.`"}], "0", 
            RowBox[{"2", " ", "m"}], 
            RowBox[{"-", "1.`"}]},
           {
            RowBox[{"-", "1.`"}], "0", "0", 
            RowBox[{"-", "1.`"}], "0", 
            RowBox[{"-", "1.`"}], 
            RowBox[{"-", "1.`"}], 
            RowBox[{"6", " ", "m"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"-", "6"}], " ", "m"}], 
            RowBox[{"-", "1.5`"}], 
            RowBox[{"-", "1.5`"}], "0", 
            RowBox[{"-", "1.5`"}], "0", "0", 
            RowBox[{"-", "1.5`"}]},
           {
            RowBox[{"-", "1.5`"}], 
            RowBox[{
             RowBox[{"-", "2"}], " ", "m"}], "0", 
            RowBox[{"-", "1.5`"}], "0", 
            RowBox[{"-", "1.5`"}], 
            RowBox[{"-", "1.5`"}], "0"},
           {
            RowBox[{"-", "1.5`"}], "0", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "m"}], 
            RowBox[{"-", "1.5`"}], "0", 
            RowBox[{"-", "1.5`"}], 
            RowBox[{"-", "1.5`"}], "0"},
           {"0", 
            RowBox[{"-", "1.5`"}], 
            RowBox[{"-", "1.5`"}], 
            RowBox[{"2", " ", "m"}], 
            RowBox[{"-", "1.5`"}], "0", "0", 
            RowBox[{"-", "1.5`"}]},
           {
            RowBox[{"-", "1.5`"}], "0", "0", 
            RowBox[{"-", "1.5`"}], 
            RowBox[{
             RowBox[{"-", "2"}], " ", "m"}], 
            RowBox[{"-", "1.5`"}], 
            RowBox[{"-", "1.5`"}], "0"},
           {"0", 
            RowBox[{"-", "1.5`"}], 
            RowBox[{"-", "1.5`"}], "0", 
            RowBox[{"-", "1.5`"}], 
            RowBox[{"2", " ", "m"}], "0", 
            RowBox[{"-", "1.5`"}]},
           {"0", 
            RowBox[{"-", "1.5`"}], 
            RowBox[{"-", "1.5`"}], "0", 
            RowBox[{"-", "1.5`"}], "0", 
            RowBox[{"2", " ", "m"}], 
            RowBox[{"-", "1.5`"}]},
           {
            RowBox[{"-", "1.5`"}], "0", "0", 
            RowBox[{"-", "1.5`"}], "0", 
            RowBox[{"-", "1.5`"}], 
            RowBox[{"-", "1.5`"}], 
            RowBox[{"6", " ", "m"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["m", "2"]}], "+", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"-", "6"}], " ", "m"}], 
            RowBox[{"-", "2.`"}], 
            RowBox[{"-", "2.`"}], "0", 
            RowBox[{"-", "2.`"}], "0", "0", 
            RowBox[{"-", "2.`"}]},
           {
            RowBox[{"-", "2.`"}], 
            RowBox[{
             RowBox[{"-", "2"}], " ", "m"}], "0", 
            RowBox[{"-", "2.`"}], "0", 
            RowBox[{"-", "2.`"}], 
            RowBox[{"-", "2.`"}], "0"},
           {
            RowBox[{"-", "2.`"}], "0", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "m"}], 
            RowBox[{"-", "2.`"}], "0", 
            RowBox[{"-", "2.`"}], 
            RowBox[{"-", "2.`"}], "0"},
           {"0", 
            RowBox[{"-", "2.`"}], 
            RowBox[{"-", "2.`"}], 
            RowBox[{"2", " ", "m"}], 
            RowBox[{"-", "2.`"}], "0", "0", 
            RowBox[{"-", "2.`"}]},
           {
            RowBox[{"-", "2.`"}], "0", "0", 
            RowBox[{"-", "2.`"}], 
            RowBox[{
             RowBox[{"-", "2"}], " ", "m"}], 
            RowBox[{"-", "2.`"}], 
            RowBox[{"-", "2.`"}], "0"},
           {"0", 
            RowBox[{"-", "2.`"}], 
            RowBox[{"-", "2.`"}], "0", 
            RowBox[{"-", "2.`"}], 
            RowBox[{"2", " ", "m"}], "0", 
            RowBox[{"-", "2.`"}]},
           {"0", 
            RowBox[{"-", "2.`"}], 
            RowBox[{"-", "2.`"}], "0", 
            RowBox[{"-", "2.`"}], "0", 
            RowBox[{"2", " ", "m"}], 
            RowBox[{"-", "2.`"}]},
           {
            RowBox[{"-", "2.`"}], "0", "0", 
            RowBox[{"-", "2.`"}], "0", 
            RowBox[{"-", "2.`"}], 
            RowBox[{"-", "2.`"}], 
            RowBox[{"6", " ", "m"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]], ",", "1"}], "]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.784400832953414*^9, 3.78440095248382*^9, 
  3.784401119012699*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"50015fea-c447-44b8-858d-a79ad61e1244"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"mat", ",", "minev"}], "]"}], "\n", 
 RowBox[{"SeedRandom", "[", "2", "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rm", "=", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"10", ",", 
      RowBox[{"{", 
       RowBox[{"40", ",", "40", ",", "3"}], "}"}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mat", "[", "t_", "]"}], ":=", 
   RowBox[{"N", "[", 
    RowBox[{"rm", ".", 
     RowBox[{"{", 
      RowBox[{"1", ",", "t", ",", 
       RowBox[{"t", "^", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"minev", "[", 
     RowBox[{"t_", "?", "NumericQ"}], "]"}], ":=", 
    RowBox[{"First", "@", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       RowBox[{"mat", "[", "t", "]"}], ",", 
       RowBox[{"-", "1"}]}], "]"}]}]}], ";"}], "\n"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"minev", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1", ",", ".01"}], "}"}]}], "]"}], ",", 
    "3"}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.864071"}], "-", 
      RowBox[{"1.30548", " ", "I"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.861327"}], "-", 
      RowBox[{"1.21718", " ", "I"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.859129"}], "-", 
      RowBox[{"1.12321", " ", "I"}]}]}], "}"}], "*)"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"Abs", "@", 
    RowBox[{"minev", "[", "t", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1", ",", ".01"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.784402257051189*^9, 3.78440225705497*^9}, {
  3.7844195845155373`*^9, 3.784419585073307*^9}, {3.7844196268252697`*^9, 
  3.784419632512826*^9}},
 CellLabel->
  "In[279]:=",ExpressionUUID->"ed51cc8c-ed26-4720-af9a-df673ac0e9be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.1739208311493282`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.24563408866524017`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.32606675173462846`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7844022591191273`*^9, {3.784418572297585*^9, 3.784418594325466*^9}, {
   3.78441956864636*^9, 3.7844195856747303`*^9}, {3.784419627399044*^9, 
   3.7844196335503197`*^9}},
 CellLabel->
  "Out[284]=",ExpressionUUID->"b6dc4378-cc85-4a97-8432-1b1813e0a25c"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667], 
     AbsoluteThickness[1.6], 
     TagBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.004766666666666667], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{},
         VertexColors->None]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.004766666666666667], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{{{0., 0.1739208311493282}, {0., 0}}, {{0.01, 
           0.24563408866524017`}, {0.01, 0}}, {{0.02, 0.32606675173462846`}, {
           0.02, 0}}, {{0.03, 0.42028803932264014`}, {0.03, 0}}, {{0.04, 
           0.5391885864551585}, {0.04, 0}}, {{0.05, 0.7173615697095523}, {
           0.05, 0}}, {{0.06, 1.110553996473401}, {0.06, 0}}, {{0.07, 
           1.1302847356965553`}, {0.07, 0}}, {{0.08, 1.1411733866721554`}, {
           0.08, 0}}, {{0.09, 1.1434421813885787`}, {0.09, 0}}, {{0.1, 
           1.1374177145868702`}, {0.1, 0}}, {{0.11, 1.1236815587656843`}, {
           0.11, 0}}, {{0.12, 1.1032514014678922`}, {0.12, 0}}, {{0.13, 
           1.0777966227966282`}, {0.13, 0}}, {{0.14, 1.0498823856601847`}, {
           0.14, 0}}, {{0.15, 1.023214809343825}, {0.15, 0}}, {{0.16, 
           1.0028096254483714`}, {0.16, 0}}, {{0.17, 0.9949193139102409}, {
           0.17, 0}}, {{0.18, 1.0064854037243085`}, {0.18, 0}}, {{0.19, 
           1.0440072707587904`}, {0.19, 0}}, {{0.2, 1.112164216308532}, {
           0.2, 0}}, {{0.21, 1.2129517006072283`}, {0.21, 0}}, {{0.22, 
           1.3458493760266892`}, {0.22, 0}}, {{0.23, 1.508766275625594}, {
           0.23, 0}}, {{0.24, 1.69910349366539}, {0.24, 0}}, {{0.25, 
           1.9144890307680789`}, {0.25, 0}}, {{0.26, 2.153059703046189}, {
           0.26, 0}}, {{0.27, 2.4132316354017678`}, {0.27, 0}}, {{0.28, 
           2.692725248677562}, {0.28, 0}}, {{0.29, 2.9864802407325324`}, {
           0.29, 0}}, {{0.3, 3.284075429277276}, {0.3, 0}}, {{0.31, 
           3.2713409206317294`}, {0.31, 0}}, {{0.32, 3.2631328711869796`}, {
           0.32, 0}}, {{0.33, 3.26408034021235}, {0.33, 0}}, {{0.34, 
           3.272996699399566}, {0.34, 0}}, {{0.35000000000000003`, 
           3.2889657364969014`}, {0.35000000000000003`, 0}}, {{0.36, 
           3.3112777990321502`}, {0.36, 0}}, {{0.37, 3.339378884676994}, {
           0.37, 0}}, {{0.38, 3.372829932318255}, {0.38, 0}}, {{0.39, 
           3.4112744450418973`}, {0.39, 0}}, {{0.4, 3.4544132306613275`}, {
           0.4, 0}}, {{0.41000000000000003`, 3.501985579465439}, {
           0.41000000000000003`, 0}}, {{0.42, 3.5537566538150833`}, {
           0.42, 0}}, {{0.43, 3.6095112524832422`}, {0.43, 0}}, {{0.44, 
           3.6690544311441666`}, {0.44, 0}}, {{0.45, 3.732219698044328}, {
           0.45, 0}}, {{0.46, 3.7988856478911406`}, {0.46, 0}}, {{
           0.47000000000000003`, 3.869001940024109}, {
           0.47000000000000003`, 0}}, {{0.48, 3.9426254745938665`}, {
           0.48, 0}}, {{0.49, 4.019967499530171}, {0.49, 0}}, {{0.5, 
           4.101452250198556}, {0.5, 0}}, {{0.51, 4.187787691445646}, {
           0.51, 0}}, {{0.52, 4.28004918977032}, {0.52, 0}}, {{0.53, 
           4.379777820866148}, {0.53, 0}}, {{0.54, 4.4890970570018345`}, {
           0.54, 0}}, {{0.55, 4.610855607110442}, {0.55, 0}}, {{0.56, 
           4.748811300598887}, {0.56, 0}}, {{0.5700000000000001, 
           4.907882135089572}, {0.5700000000000001, 0}}, {{0.58, 
           5.032807430439238}, {0.58, 0}}, {{0.59, 4.8564516187688715`}, {
           0.59, 0}}, {{0.6, 4.702667025501911}, {0.6, 0}}, {{0.61, 
           4.567103554865193}, {0.61, 0}}, {{0.62, 4.449053701907378}, {
           0.62, 0}}, {{0.63, 4.3488474488507505`}, {0.63, 0}}, {{0.64, 
           4.266835926419787}, {0.64, 0}}, {{0.65, 4.202983984841483}, {
           0.65, 0}}, {{0.66, 4.15676754682069}, {0.66, 0}}, {{0.67, 
           4.127227689517445}, {0.67, 0}}, {{0.68, 4.113091980632006}, {
           0.68, 0}}, {{0.6900000000000001, 4.11290983415757}, {
           0.6900000000000001, 0}}, {{0.7000000000000001, 
           4.1251744432700095`}, {0.7000000000000001, 0}}, {{0.71, 
           4.148420704813198}, {0.71, 0}}, {{0.72, 4.181298032607801}, {
           0.72, 0}}, {{0.73, 4.222621328311315}, {0.73, 0}}, {{0.74, 
           4.2714047657079774`}, {0.74, 0}}, {{0.75, 4.326882985359675}, {
           0.75, 0}}, {{0.76, 4.3885237194241355`}, {0.76, 0}}, {{0.77, 
           4.456035244440133}, {0.77, 0}}, {{0.78, 4.5293715846548475`}, {
           0.78, 0}}, {{0.79, 4.608738104936514}, {0.79, 0}}, {{0.8, 
           4.694600030842762}, {0.8, 0}}, {{0.81, 4.7876965109287015`}, {
           0.81, 0}}, {{0.8200000000000001, 4.889063143871977}, {
           0.8200000000000001, 0}}, {{0.8300000000000001, 
           5.000066596670902}, {0.8300000000000001, 0}}, {{0.84, 
           5.122456451603139}, {0.84, 0}}, {{0.85, 5.258442728061189}, {
           0.85, 0}}, {{0.86, 5.410815096632027}, {0.86, 0}}, {{0.87, 
           5.583138158612401}, {0.87, 0}}, {{0.88, 5.640656053307905}, {
           0.88, 0}}, {{0.89, 5.530914023955358}, {0.89, 0}}, {{0.9, 
           5.408862919445116}, {0.9, 0}}, {{0.91, 5.274453060075441}, {
           0.91, 0}}, {{0.92, 5.127953988093833}, {0.92, 0}}, {{0.93, 
           4.970130146157957}, {0.93, 0}}, {{0.9400000000000001, 
           4.80250883082781}, {0.9400000000000001, 0}}, {{0.9500000000000001, 
           3.855641054353415}, {0.9500000000000001, 0}}, {{0.96, 
           3.1802936168374925`}, {0.96, 0}}, {{0.97, 2.7362086692148058`}, {
           0.97, 0}}, {{0.98, 2.404707079522667}, {0.98, 0}}, {{0.99, 
           2.1633219540054505`}, {0.99, 0}}, {{1., 2.014839348813736}, {
           1., 0}}},
         VertexColors->None]}},
      Annotation[#, "Charting`Private`Tag$55367#1"]& ]}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667],
       AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJw1kgtQVHUUxndDeVyQ7r5QxEC0FMdpGC0sKvj+GoSDhoNTFAoU8lAcDdhq
JIhQxDEpwdJEHB/IQzKVKWIQNBEVVAQEFVhe6S67vJbX8lpN0mL3Hs7MnTv3
8T/n+77fcd0SuzHqJZFIFDV9me4z9cNhwwWb928hSV7kp0lMQ2ttndwQ10DP
RzCuqpT7PWpCmfO+gcCyU2g/Plb/X3c7fc/HufglO6xXa3A821Tn8G3/MpYz
0UP/F+FO+Vc+TVWjGAw0vfkDYddjlQWKMTpfgha3nZZYMwZOlRfnxV1ChS7M
Kn3dGPUrR9Fvan3nyjEsC8m8Men2F/x9c/ZmPxul/hVoc7UZ1Z8dRf70aVVe
JdJj9OcLvWfmXYdfvyEhsM6AN8x1E2/lDic7fGag+VVQ5zo4pdoacHPSbXpC
NUJ7d1iFt4yQnttw3xwQd2i+ARvNA+/gjEvtE1ZiIH01aPQ8WLKjdhSaRFPD
u1hc3cGxbeOktw4llsZN2d9PIt4kL64ecv0Kp77FT0n/PVS8WPDafvcpCDQa
UbpiCtfOvCA/jWgMzgrd5Slma80D7mNujVfE+gALJvi7D3GC+MCf6bOZaVpI
5gOkVOdUbtBZMcHvQ2RVFAfV+HLMbEf1ECxOU1OynGOC/yYEixdt657PMReT
HOdmLG/yXdqygGNCHs0IKq7QzXPn2NZoU7UgK/i0T/0Gjgn5qGBMNa5KSeaY
qZu8SAVuYfMHdpc4JuTViq5VyjUZUxwzmtpNtmK3Inu1v78tE/Jrg2NS5Na8
XFvmbW7YjucGo4Vklh0T8myHU47hydwv7JhZ3r4OOF1MifVT2zEh3078yP/q
4blpDquvM1UnjMU+oqMdc5iQ998IT85yc460ZwqzwEdYu3eW/6Vxeybk/wgn
7TM8U9JfZuZ2IY/xaqdHiFLOM4GHGjHNaxy1W3nyo0ZddMH2dZU8E/io0Rn0
fFW1s4T8qWG7yzVRlyYhXhos/VnT0TwhIb8aRCV0uqbFS4mfBu53r0TceSEl
/1349KMr7efPyIhnF454RPgec5VTHl1oePxmoXinjPhqsce6fXR/g5Ty0SI9
NKi21EdKvLWQhzRcaaqVUF46HN4p8nk7SkL8dbiW1B3rJZFQfjpILXOtOxp4
2oduSC8+O78/h6c8u2H5Xek/fqk87Uc3YmcFb7n3JU/59sB6e0nuqelnYV96
MCfz98uv7+Yp7x6s1eqOTWXxtD+9uJFmseJsOU/592JgIr7VqOVpn3rx9Faq
64BCQjz6ED5xL+ZygIR49CHhqHJZ20EJ8ehDxK2Vvc8ezPDoQ9u8ol9kzlLi
0Q/HhcVccKyUePTjqlz8ru/tGR79qFZa6rOXyIiHHh/anPgpOkPGDpl56PHK
vHe+lohmeOgR4rfZMypZTjwGUFqg9SiwVhCPAXwyriy9kK8gHgPocgtfvuhj
B+IxiOSq8cXWhxyIxyDs9lgNFbo4EI9BRKy2N17IVRCPIZzwVnhyjgriMYSh
2TVhlnvlxGMI95VcXYxGRjyGEZ3z7+MqDxnxGEb17vVBm1pn9n8Y/ROnb3vF
2xCPEUR+ow+7rp1NPEaQKivjVe9ZEI8RlH2efTUpQEw8DDh5t2hupLOI/Q+Q
ve6y
       "]], {}},
     Annotation[#, "Charting`Private`Tag$55367#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 1.}, {0, 5.640656053307905}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7844022591191273`*^9, {3.784418572297585*^9, 3.784418594325466*^9}, {
   3.78441956864636*^9, 3.7844195856747303`*^9}, {3.784419627399044*^9, 
   3.7844196336463413`*^9}},
 CellLabel->
  "Out[285]=",ExpressionUUID->"63a47991-39cf-4aaa-8b2a-273ba736ad93"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{"ev", ",", "minev"}], "]"}]], "Input",
 CellChangeTimes->{{3.784419792303068*^9, 3.784419795000533*^9}},
 CellLabel->
  "In[299]:=",ExpressionUUID->"b6abc09b-5aab-4274-b78e-afdb1716a838"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ev", "[", "m_", "]"}], " ", ":=", " ", 
   RowBox[{"N", "[", 
    TagBox[
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{
           RowBox[{"-", "6"}], " ", "m"}], "0", "0", "0", "0", "0", "0", 
          "0"},
         {"0", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "m"}], "0", "0", "0", "0", "0", "0"},
         {"0", "0", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "m"}], "0", "0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{"2", " ", "m"}], "0", "0", "0", "0"},
         {"0", "0", "0", "0", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "m"}], "0", "0", "0"},
         {"0", "0", "0", "0", "0", 
          RowBox[{"2", " ", "m"}], "0", "0"},
         {"0", "0", "0", "0", "0", "0", 
          RowBox[{"2", " ", "m"}], "0"},
         {"0", "0", "0", "0", "0", "0", "0", 
          RowBox[{"6", " ", "m"}]}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.78441728027208*^9, 3.78441730871902*^9}, {
   3.784417358475898*^9, 3.7844173965425577`*^9}, {3.7844174332728786`*^9, 
   3.784417433488043*^9}, {3.784417475853547*^9, 3.784417484881372*^9}, {
   3.78441755745573*^9, 3.784417558228032*^9}, {3.784417610248317*^9, 
   3.784417613258422*^9}, {3.784417766298966*^9, 3.78441779859612*^9}, {
   3.784418080111116*^9, 3.7844180819266863`*^9}, 3.7844181728387737`*^9, {
   3.78441823330657*^9, 3.7844182358556213`*^9}, 3.784418760601506*^9, 
   3.7844188037763147`*^9, 3.7844197189424477`*^9},
 CellLabel->
  "In[300]:=",ExpressionUUID->"13019d07-a357-4434-968a-23ad14d4f7ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"minev", "[", 
    RowBox[{"m_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"First", "@", 
    RowBox[{"Eigenvalues", "[", 
     RowBox[{
      RowBox[{"ev", "[", "m", "]"}], ",", 
      RowBox[{"-", "1"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7844179788955193`*^9, 3.784417982899353*^9}, {
   3.784418035237615*^9, 3.784418037097224*^9}, {3.784418820693664*^9, 
   3.784418888355485*^9}, {3.784419509057713*^9, 3.784419522973947*^9}, 
   3.784419637568615*^9, {3.784419731847809*^9, 3.784419753480805*^9}},
 CellLabel->
  "In[301]:=",ExpressionUUID->"7aff3a41-245e-4dbd-8e0e-8b90d7b95160"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"Abs", "@", 
    RowBox[{"minev", "[", "m", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0.1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.784417878124749*^9, 3.7844179054018593`*^9}, {
   3.7844180499054117`*^9, 3.784418056495398*^9}, {3.7844180978620653`*^9, 
   3.7844181252917757`*^9}, 3.784418779584296*^9, {3.78441883522068*^9, 
   3.784418836144889*^9}, 3.784419648165662*^9},
 CellLabel->
  "In[302]:=",ExpressionUUID->"12c83865-c8e7-4d9e-ab52-fa2410abc232"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     TagBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{{{0., 0.}, {0., 0}}},
         VertexColors->None]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{{{-1., 2.}, {-1., 0}}, {{-0.9, 1.8}, {-0.9, 0}}, {{-0.8, 
           1.6}, {-0.8, 0}}, {{-0.7, 1.4}, {-0.7, 0}}, {{-0.6, 
           1.2}, {-0.6, 0}}, {{-0.5, 1.}, {-0.5, 0}}, {{-0.3999999999999999, 
           0.7999999999999998}, {-0.3999999999999999, 
            0}}, {{-0.29999999999999993`, 
           0.5999999999999999}, {-0.29999999999999993`, 
            0}}, {{-0.19999999999999996`, 
           0.3999999999999999}, {-0.19999999999999996`, 
            0}}, {{-0.09999999999999998, 
           0.19999999999999996`}, {-0.09999999999999998, 0}}, {{
           0.10000000000000009`, 0.20000000000000018`}, {
           0.10000000000000009`, 0}}, {{0.20000000000000018`, 
           0.40000000000000036`}, {0.20000000000000018`, 0}}, {{
           0.30000000000000004`, 0.6000000000000001}, {
           0.30000000000000004`, 0}}, {{0.40000000000000013`, 
           0.8000000000000003}, {0.40000000000000013`, 0}}, {{0.5, 1.}, {
           0.5, 0}}, {{0.6000000000000001, 1.2000000000000002`}, {
           0.6000000000000001, 0}}, {{0.7000000000000002, 
           1.4000000000000004`}, {0.7000000000000002, 0}}, {{0.8, 1.6}, {
           0.8, 0}}, {{0.9000000000000001, 1.8000000000000003`}, {
           0.9000000000000001, 0}}, {{1., 2.}, {1., 0}}},
         VertexColors->None]}},
      Annotation[#, "Charting`Private`Tag$60057#1"]& ]}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], {}, 
      PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEf9kMZDmfPgMCb/RD6j/2smSDwcj+E/mmfBgbP
9kPob/bGYPB4P4T+bA8x5gHUvA/2M8D6bu6H0C/tjcDqLu+H0I+h8ieh8jeh
/J1Q/kl7BjSwACJvvwAqj0rftDeBmA+lH9vPgYrPgdoPdZ89zH0wdSZQ92dA
/Aelv8H8bw/z/zlI+EDpP3BzYOEHAA0/khk=
       "]], {}},
     Annotation[#, "Charting`Private`Tag$60057#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{-1., 1.}, {0, 2.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.784417882826948*^9, 3.784417906281526*^9}, 
   3.784417943734116*^9, 3.784418010892551*^9, {3.784418044224162*^9, 
   3.784418179855857*^9}, 3.784418243003158*^9, {3.784418771606634*^9, 
   3.784418890961752*^9}, {3.784419517622888*^9, 3.784419526348078*^9}, {
   3.784419640371223*^9, 3.78441964865515*^9}, {3.7844197248732443`*^9, 
   3.784419756952286*^9}, 3.784419807162711*^9},
 CellLabel->
  "Out[302]=",ExpressionUUID->"279a707d-d9f9-4b48-b660-1c9d4c06304b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"H", "=", 
  RowBox[{"Ham", "/.", 
   RowBox[{"{", 
    RowBox[{"\[CapitalDelta]", "\[Rule]", "0"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7844181905017157`*^9, 3.784418219929682*^9}, {
  3.784418327627269*^9, 3.784418328486967*^9}, {3.784418791709977*^9, 
  3.784418792378636*^9}, {3.784419707568885*^9, 3.784419707759202*^9}},
 CellLabel->
  "In[289]:=",ExpressionUUID->"5b2684fd-fcfd-4f8e-bf95-f62ca0c0131d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "6"}], " ", "m"}], "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "m"}], "0", "0", "0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "m"}], "0", "0", "0", "0", "0"},
     {"0", "0", "0", 
      RowBox[{"2", " ", "m"}], "0", "0", "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "m"}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", 
      RowBox[{"2", " ", "m"}], "0", "0"},
     {"0", "0", "0", "0", "0", "0", 
      RowBox[{"2", " ", "m"}], "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"6", " ", "m"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7844181921864243`*^9, 3.78441822283119*^9, 
  3.784418329274959*^9, 3.7844187937731667`*^9, 3.784419708537956*^9},
 CellLabel->
  "Out[289]//MatrixForm=",ExpressionUUID->"9ebff5b2-7b73-483d-8f81-\
19ca3088454e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ev", "[", "m_", "]"}], " ", ":=", " ", 
   RowBox[{"N", "[", "H", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.784418341355979*^9},
 CellLabel->
  "In[135]:=",ExpressionUUID->"2760fa90-4002-4602-9811-dae20f61b214"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"minev", "[", 
    RowBox[{"m_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"First", "@", 
    RowBox[{"Eigenvalues", "[", 
     RowBox[{
      RowBox[{"ev", "[", "m", "]"}], ",", 
      RowBox[{"-", "1"}]}], "]"}]}]}], ";"}]], "Input",
 CellLabel->
  "In[136]:=",ExpressionUUID->"c4a17c01-d982-439e-9a57-df79be4ab7c7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"minev", "[", "m", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "0", ",", "1", ",", ".1"}], "}"}]}], "]"}], ",", 
   "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.7844184011661987`*^9, 3.7844184220009193`*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"0eea5bbd-53b8-44e6-a6e4-731c07d41748"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.`", 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.5`"}], "0.`", 
        RowBox[{"-", "0.5`"}], "0.`", "0.`", 
        RowBox[{"-", "0.5`"}]},
       {
        RowBox[{"-", "0.5`"}], "0.`", "0.`", 
        RowBox[{"-", "0.5`"}], "0.`", 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.5`"}], "0.`"},
       {
        RowBox[{"-", "0.5`"}], "0.`", "0.`", 
        RowBox[{"-", "0.5`"}], "0.`", 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.5`"}], "0.`"},
       {"0.`", 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.5`"}], "0.`", 
        RowBox[{"-", "0.5`"}], "0.`", "0.`", 
        RowBox[{"-", "0.5`"}]},
       {
        RowBox[{"-", "0.5`"}], "0.`", "0.`", 
        RowBox[{"-", "0.5`"}], "0.`", 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.5`"}], "0.`"},
       {"0.`", 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.5`"}], "0.`", 
        RowBox[{"-", "0.5`"}], "0.`", "0.`", 
        RowBox[{"-", "0.5`"}]},
       {"0.`", 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.5`"}], "0.`", 
        RowBox[{"-", "0.5`"}], "0.`", "0.`", 
        RowBox[{"-", "0.5`"}]},
       {
        RowBox[{"-", "0.5`"}], "0.`", "0.`", 
        RowBox[{"-", "0.5`"}], "0.`", 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.5`"}], "0.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "0.6000000000000001`"}], 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.5`"}], "0.`", 
        RowBox[{"-", "0.5`"}], "0.`", "0.`", 
        RowBox[{"-", "0.5`"}]},
       {
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.2`"}], "0.`", 
        RowBox[{"-", "0.5`"}], "0.`", 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.5`"}], "0.`"},
       {
        RowBox[{"-", "0.5`"}], "0.`", 
        RowBox[{"-", "0.2`"}], 
        RowBox[{"-", "0.5`"}], "0.`", 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.5`"}], "0.`"},
       {"0.`", 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.5`"}], "0.2`", 
        RowBox[{"-", "0.5`"}], "0.`", "0.`", 
        RowBox[{"-", "0.5`"}]},
       {
        RowBox[{"-", "0.5`"}], "0.`", "0.`", 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.2`"}], 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.5`"}], "0.`"},
       {"0.`", 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.5`"}], "0.`", 
        RowBox[{"-", "0.5`"}], "0.2`", "0.`", 
        RowBox[{"-", "0.5`"}]},
       {"0.`", 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.5`"}], "0.`", 
        RowBox[{"-", "0.5`"}], "0.`", "0.2`", 
        RowBox[{"-", "0.5`"}]},
       {
        RowBox[{"-", "0.5`"}], "0.`", "0.`", 
        RowBox[{"-", "0.5`"}], "0.`", 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.5`"}], "0.6000000000000001`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "1.2000000000000002`"}], 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.5`"}], "0.`", 
        RowBox[{"-", "0.5`"}], "0.`", "0.`", 
        RowBox[{"-", "0.5`"}]},
       {
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.4`"}], "0.`", 
        RowBox[{"-", "0.5`"}], "0.`", 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.5`"}], "0.`"},
       {
        RowBox[{"-", "0.5`"}], "0.`", 
        RowBox[{"-", "0.4`"}], 
        RowBox[{"-", "0.5`"}], "0.`", 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.5`"}], "0.`"},
       {"0.`", 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.5`"}], "0.4`", 
        RowBox[{"-", "0.5`"}], "0.`", "0.`", 
        RowBox[{"-", "0.5`"}]},
       {
        RowBox[{"-", "0.5`"}], "0.`", "0.`", 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.4`"}], 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.5`"}], "0.`"},
       {"0.`", 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.5`"}], "0.`", 
        RowBox[{"-", "0.5`"}], "0.4`", "0.`", 
        RowBox[{"-", "0.5`"}]},
       {"0.`", 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.5`"}], "0.`", 
        RowBox[{"-", "0.5`"}], "0.`", "0.4`", 
        RowBox[{"-", "0.5`"}]},
       {
        RowBox[{"-", "0.5`"}], "0.`", "0.`", 
        RowBox[{"-", "0.5`"}], "0.`", 
        RowBox[{"-", "0.5`"}], 
        RowBox[{"-", "0.5`"}], "1.2000000000000002`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.784418405335628*^9, 3.784418422848805*^9}},
 CellLabel->
  "Out[139]=",ExpressionUUID->"f07fafaf-c67e-408a-8d77-8ae365f06af3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"Abs", "@", 
    RowBox[{"minev", "[", "m", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[137]:=",ExpressionUUID->"ddac9c2b-0165-4fc6-b18b-5b1e7570d4d2"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     TagBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{},
         VertexColors->None]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{},
         VertexColors->None]}},
      Annotation[#, "Charting`Private`Tag$42417#1"]& ]}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], {}, {}, {}},
     Annotation[#, "Charting`Private`Tag$42417#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 1.}, {-1, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.784418386755362*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"c04a36fc-e4a0-4810-90c3-2df805cafc92"]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{Automatic, -927}, {Automatic, -23}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 797, 20, 119, "Input",ExpressionUUID->"1d498b53-d483-4cb2-a780-6b81a585f45a"],
Cell[CellGroupData[{
Cell[1380, 44, 844, 23, 73, "Input",ExpressionUUID->"09d3b63b-796c-42a0-92c7-1eb6dc559a22"],
Cell[2227, 69, 1381, 41, 94, "Output",ExpressionUUID->"458596ee-21e3-48f9-8359-05b39dca2790"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3645, 115, 229, 5, 30, "Input",ExpressionUUID->"410983f1-df45-495b-a945-1394ccff97ed"],
Cell[3877, 122, 1228, 36, 94, "Output",ExpressionUUID->"ebcbe4ae-f339-4067-b2a3-87d4f2ea8299"]
}, Open  ]],
Cell[5120, 161, 480, 9, 30, "Input",ExpressionUUID->"4b86f1cf-9473-409c-ac78-ef111b14da2e"],
Cell[CellGroupData[{
Cell[5625, 174, 894, 20, 33, "Input",ExpressionUUID->"b13aa593-6552-4403-b8d6-118d96e6754b"],
Cell[6522, 196, 28170, 812, 873, "Output",ExpressionUUID->"628832c7-1d24-470a-bc38-3d4b9546e4ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34729, 1013, 30236, 838, 1343, "Input",ExpressionUUID->"c73aed7a-5d15-43bc-b72e-2eccb786330c"],
Cell[64968, 1853, 194358, 3251, 381, "Output",ExpressionUUID->"9e3705bc-ce4a-4d96-9906-6ed9639c8c7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259363, 5109, 1073, 27, 52, "Input",ExpressionUUID->"c3b2de7c-1144-4227-9b94-9f566c65b63f"],
Cell[260439, 5138, 2686, 77, 162, "Output",ExpressionUUID->"782c2185-0529-4875-af22-45853c7afc69"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263162, 5220, 230, 5, 30, "Input",ExpressionUUID->"56e268e3-2546-4f19-8ce2-d5037254124b"],
Cell[263395, 5227, 2422, 69, 162, "Output",ExpressionUUID->"750bea37-35a3-489d-9618-e894674f4fe9"]
}, Open  ]],
Cell[265832, 5299, 295, 6, 30, "Input",ExpressionUUID->"f1231f9f-03db-4c62-ad7a-626d1cb8f0ef"],
Cell[CellGroupData[{
Cell[266152, 5309, 556, 15, 33, "Input",ExpressionUUID->"a1a2ed2c-2a55-4710-a391-eee7f193e7a9"],
Cell[266711, 5326, 11687, 336, 643, "Output",ExpressionUUID->"50015fea-c447-44b8-858d-a79ad61e1244"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278435, 5667, 2044, 63, 262, "Input",ExpressionUUID->"ed51cc8c-ed26-4720-af9a-df673ac0e9be"],
Cell[280482, 5732, 667, 14, 34, "Output",ExpressionUUID->"b6dc4378-cc85-4a97-8432-1b1813e0a25c"],
Cell[281152, 5748, 10662, 199, 244, "Output",ExpressionUUID->"63a47991-39cf-4aaa-8b2a-273ba736ad93"]
}, Open  ]],
Cell[291829, 5950, 238, 5, 30, "Input",ExpressionUUID->"b6abc09b-5aab-4274-b78e-afdb1716a838"],
Cell[292070, 5957, 2098, 51, 147, "Input",ExpressionUUID->"13019d07-a357-4434-968a-23ad14d4f7ed"],
Cell[294171, 6010, 652, 15, 30, "Input",ExpressionUUID->"7aff3a41-245e-4dbd-8e0e-8b90d7b95160"],
Cell[CellGroupData[{
Cell[294848, 6029, 590, 13, 30, "Input",ExpressionUUID->"12c83865-c8e7-4d9e-ab52-fa2410abc232"],
Cell[295441, 6044, 5442, 124, 243, "Output",ExpressionUUID->"279a707d-d9f9-4b48-b660-1c9d4c06304b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300920, 6173, 439, 9, 30, "Input",ExpressionUUID->"5b2684fd-fcfd-4f8e-bf95-f62ca0c0131d"],
Cell[301362, 6184, 1365, 38, 162, "Output",ExpressionUUID->"9ebff5b2-7b73-483d-8f81-19ca3088454e"]
}, Open  ]],
Cell[302742, 6225, 263, 7, 30, "Input",ExpressionUUID->"2760fa90-4002-4602-9811-dae20f61b214"],
Cell[303008, 6234, 366, 11, 30, "Input",ExpressionUUID->"c4a17c01-d982-439e-9a57-df79be4ab7c7"],
Cell[CellGroupData[{
Cell[303399, 6249, 404, 11, 30, "Input",ExpressionUUID->"0eea5bbd-53b8-44e6-a6e4-731c07d41748"],
Cell[303806, 6262, 5798, 172, 315, "Output",ExpressionUUID->"f07fafaf-c67e-408a-8d77-8ae365f06af3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309641, 6439, 302, 8, 30, "Input",ExpressionUUID->"ddac9c2b-0165-4fc6-b18b-5b1e7570d4d2"],
Cell[309946, 6449, 3532, 93, 231, "Output",ExpressionUUID->"c04a36fc-e4a0-4810-90c3-2df805cafc92"]
}, Open  ]]
}
]
*)

